(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{371:function(e,t,o){"use strict";o.r(t);var i=o(42),n=Object(i.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"language-properties"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#language-properties"}},[e._v("#")]),e._v(" Language properties")]),e._v(" "),o("h2",{attrs:{id:"motivation-why-does-m-exist"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#motivation-why-does-m-exist"}},[e._v("#")]),e._v(" Motivation. Why does M exist")]),e._v(" "),o("p",[e._v("Problem I am trying to solve: I know how to say it, I have said it, I know\nsomeone else can say it.")]),e._v(" "),o("p",[e._v("Why my problem is important to solve: Who does it benefit? How much is it worth\nsolving?")]),e._v(" "),o("p",[e._v("Plan B: What other solution do I have for my problem? Is plan B implemented?")]),e._v(" "),o("p",[e._v("Steps: I can articulate the steps to solve my problem I can point risks and\nunknowns in those steps Examples: I have used the project to solve actual\nproblems Completion: I know what means to my project being complete Statistics:\nI know how to falsify my hypothesis. Test with users my project and disprove my\nassumptions.")]),e._v(" "),o("p",[e._v("Efficiency: I know how long it takes to run the project. I know the minimal\nspecs for my project to run I know the dependencies of my project")]),e._v(" "),o("p",[e._v("Profile the generation I know how to optimize the generation")]),e._v(" "),o("p",[e._v("Use case: I know the most common use cases of the project I know how programs\nwritten in my project look lke in real life I know the acceptable range of\nprograms that programmers can write in my project I know what happens when\nsomeone goes out of that range Watch users use the project What is the part that\nthey require most time for? I know to debug when something fails, even without\nsource code I can apply data oriented: I know what data I operate on I know how\nI act with cache This project gives back to the community.")]),e._v(" "),o("h2",{attrs:{id:"properties"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),o("p",[e._v("M is a DSL Compiled External C-like concrete syntax textual Scratch like visual\nsyntax Abstract syntax is a EMF model Strongly typed with implicit types Type\ninferred and validated No null reference, no type conversion error, no infinite\nloop Execution semantics: Game engine projects with assets Useful for non\nprogrammers Turing complete Efficient compilation Efficient generated code,\nnative multi threaded Clean: Native support for DOD Full IDE support:")]),e._v(" "),o("ul",[o("li",[e._v("Code completion")]),e._v(" "),o("li",[e._v("Code generation")]),e._v(" "),o("li",[e._v("Syntax Highlight")]),e._v(" "),o("li",[e._v("Error markers")]),e._v(" "),o("li",[e._v("Quick fixes")]),e._v(" "),o("li",[e._v("Formatting")]),e._v(" "),o("li",[e._v("Refactoring")]),e._v(" "),o("li",[e._v("Labels")]),e._v(" "),o("li",[e._v("Outline view")]),e._v(" "),o("li",[e._v("Find uses")]),e._v(" "),o("li",[e._v("Find definition")]),e._v(" "),o("li",[e._v("Debugging")])]),e._v(" "),o("p",[e._v("Small syntax Concise User defined abstractions: Files as libraries, functions\nfor reusability, prefabs possibly nested Fast and volatile development of\nlanguage No collections, all entities Big language scope: Most games M improves:")]),e._v(" "),o("ul",[o("li",[e._v("Productivity: Less code to write and read")]),e._v(" "),o("li",[e._v("Quality: No runtime errors, halts, multi threaded")]),e._v(" "),o("li",[e._v("Communication and thinking: Familiar domain concepts, personalized views")]),e._v(" "),o("li",[e._v("Platform support: Any platform with JVM any platform with Unity support")])])])}),[],!1,null,null,null);t.default=n.exports}}]);