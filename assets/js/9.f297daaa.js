(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{381:function(e,i,a){"use strict";a.r(i);var t=a(42),n=Object(t.a)({},(function(){var e=this,i=e.$createElement,a=e._self._c||i;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"responsability-view"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#responsability-view"}},[e._v("#")]),e._v(" Responsability view")]),e._v(" "),a("p",[e._v("Public methods orchestrate the work. Explain the flow and delegate.\nPrivate methods do the actual work manipulating the data.")]),e._v(" "),a("h2",{attrs:{id:"vscode-extension"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vscode-extension"}},[e._v("#")]),e._v(" VSCode extension")]),e._v(" "),a("ul",[a("li",[e._v("Define marketplace page's information")]),e._v(" "),a("li",[e._v("Define bracket features and snippets declaratively")]),e._v(" "),a("li",[e._v("Detect missing dependencies (Java 8+) and offer solutions")]),e._v(" "),a("li",[e._v("Detect extension activation events and start language server")]),e._v(" "),a("li",[e._v("Associate .Ⲙ and Ⲙ.json files with Ⲙ and watch for modifications")])]),e._v(" "),a("h3",{attrs:{id:"package-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#package-json"}},[e._v("#")]),e._v(" Package.json")]),e._v(" "),a("ul",[a("li",[e._v("Define name version publisher and license")]),e._v(" "),a("li",[e._v("Define descriptions and keywords")]),e._v(" "),a("li",[e._v("Define icon, preview label and no q&a section")]),e._v(" "),a("li",[e._v("Link to webpage, repository and issues")]),e._v(" "),a("li",[e._v("Contribute language Ⲙ for .Ⲙ files")]),e._v(" "),a("li",[e._v("Activate extension when Ⲙ file opened")]),e._v(" "),a("li",[e._v("Activate extension when workspace contains a Ⲙ or Ⲙ.json file")]),e._v(" "),a("li",[e._v("Activation starts in main.js")]),e._v(" "),a("li",[e._v("Declare vscode-languageclient dependency")]),e._v(" "),a("li",[e._v("Define vscode engine (required by vsce)")])]),e._v(" "),a("h3",{attrs:{id:"brackets-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#brackets-json"}},[e._v("#")]),e._v(" Brackets.json")]),e._v(" "),a("ul",[a("li",[e._v("Indent and dedent automatically with {}")]),e._v(" "),a("li",[e._v("Create folding markers with {}")]),e._v(" "),a("li",[e._v("Highlighting bracket pairs for {} [] and ()")]),e._v(" "),a("li",[e._v("Autoclose brackets {} [] ()")]),e._v(" "),a("li",[e._v("Surround selection with brackets {} [] ()")])]),e._v(" "),a("h3",{attrs:{id:"snippets-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#snippets-json"}},[e._v("#")]),e._v(" Snippets.json")]),e._v(" "),a("ul",[a("li",[e._v("Snippets for foreach, if, set and system")]),e._v(" "),a("li",[e._v("Snippets respect current indentation even if they span multiple lines")]),e._v(" "),a("li",[e._v("Snippets have default text and tab jumps")]),e._v(" "),a("li",[e._v("Snippets description is snippet")])]),e._v(" "),a("p",[e._v("! Only in english !")]),e._v(" "),a("h3",{attrs:{id:"main-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#main-js"}},[e._v("#")]),e._v(" Main.js")]),e._v(" "),a("ul",[a("li",[e._v("Listen to activation and deactivation events")]),e._v(" "),a("li",[e._v("Detect java 8+ installed in path by running java -version")]),e._v(" "),a("li",[e._v("Show button to open webpage to download openjdk if necessary")]),e._v(" "),a("li",[e._v("Detect debugging mode by analyzing process' env (set in .vscode/launch.json)")]),e._v(" "),a("li",[e._v("If debugging set connection by socket 5007")]),e._v(" "),a("li",[e._v("If not debugging set connection by starting java process and using stdio")]),e._v(" "),a("li",[e._v("Start language client and server")]),e._v(" "),a("li",[e._v("Watch .Ⲙ and Ⲙ.json files and send file modified notifications to server")]),e._v(" "),a("li",[e._v("Stop client when extension gets deactivated")])]),e._v(" "),a("h2",{attrs:{id:"main-package"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#main-package"}},[e._v("#")]),e._v(" Main package")]),e._v(" "),a("ul",[a("li",[e._v("Communicate with client using LSP4J")]),e._v(" "),a("li",[e._v("Keep projects in sync with file system")]),e._v(" "),a("li",[e._v("Incrementally validate projects when files modify")]),e._v(" "),a("li",[e._v("Trigger project generation when no errors found")]),e._v(" "),a("li",[e._v("Resolve document services like hover and completions")])]),e._v(" "),a("h3",{attrs:{id:"main-java"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#main-java"}},[e._v("#")]),e._v(" Main.java")]),e._v(" "),a("ul",[a("li",[e._v("Detect debugging mode by reading console arguments")]),e._v(" "),a("li",[e._v("Listen for language client connection by stdio if not debugging")]),e._v(" "),a("li",[e._v("Listen for language client connection by socket 5007 if debugging")]),e._v(" "),a("li",[e._v("Listen to language client reconnection by socket 5007")])]),e._v(" "),a("h3",{attrs:{id:"server-java"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#server-java"}},[e._v("#")]),e._v(" Server.java")]),e._v(" "),a("p",[e._v("Connection lifetime events")]),e._v(" "),a("ul",[a("li",[e._v("Start listening for language client notifications and requests")]),e._v(" "),a("li",[e._v("Initilize request: Send server capabilities + create a project foreach folder")]),e._v(" "),a("li",[e._v("Initialized: Initialize all projects and publish created diagnostics")]),e._v(" "),a("li",[e._v("Shutdown and Exit: Exit program with status 0")])]),e._v(" "),a("p",[e._v("File and folder synchronization")]),e._v(" "),a("ul",[a("li",[e._v("Folder created: Create project and publish diagnostics")]),e._v(" "),a("li",[e._v("Folder removed: Remove project")]),e._v(" "),a("li",[e._v("Detect containing projects of file")]),e._v(" "),a("li",[e._v("File created: Read file + Signal containing projects + publish diagnostics")]),e._v(" "),a("li",[e._v("File removed: Signal containing projects + publish diagnostics")]),e._v(" "),a("li",[e._v("File modified: Signal containing projects+ publish diagnostics")])]),e._v(" "),a("p",[e._v("Language services")]),e._v(" "),a("ul",[a("li",[e._v("Publish diagnostics of all projects in workspace")]),e._v(" "),a("li",[e._v("Show alert if a file is opened outside of all projects")]),e._v(" "),a("li",[e._v("Unwrap lsp4j parameters into file and position")]),e._v(" "),a("li",[e._v("ask containing projects for service")]),e._v(" "),a("li",[e._v("wrap results for lsp4j")])]),e._v(" "),a("p",[e._v("Known issues")]),e._v(" "),a("ul",[a("li",[e._v("! Deleting first project sends a shutdown request and the server exits !")])]),e._v(" "),a("h3",{attrs:{id:"project-java"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#project-java"}},[e._v("#")]),e._v(" Project.java")]),e._v(" "),a("ul",[a("li",[e._v("Initialize: Detect all Ⲙ files + validate changes + analyze result")]),e._v(" "),a("li",[e._v("Initialize: Detect configuration file and save parsed configuration")]),e._v(" "),a("li",[e._v("Delete file: Validate change + analyze result or clean configuration")]),e._v(" "),a("li",[e._v("Modify file: Validate change + analyze result or update configuration")]),e._v(" "),a("li",[e._v("Delegate language services to inspector")])]),e._v(" "),a("p",[e._v("Privately")]),e._v(" "),a("ul",[a("li",[e._v("Analyze result: generate project if no errors")]),e._v(" "),a("li",[e._v("Convert m.validation.problems to lsp4j.diagnostics")]),e._v(" "),a("li",[e._v("Convert nodes to text ranges")]),e._v(" "),a("li",[e._v("Convert offsets to line + character text positions")])]),e._v(" "),a("p",[e._v("Known issues")]),e._v(" "),a("ul",[a("li",[e._v("! Converting nodes to text ranges can be done better !")])]),e._v(" "),a("h3",{attrs:{id:"inspector-java"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inspector-java"}},[e._v("#")]),e._v(" Inspector.java")]),e._v(" "),a("p",[e._v("Hover")]),e._v(" "),a("ul",[a("li",[e._v("Classify query entities with component lists")]),e._v(" "),a("li",[e._v("Classify user values with/without type")]),e._v(" "),a("li",[e._v("Classify user components with/without type")]),e._v(" "),a("li",[e._v("Classify user systems")]),e._v(" "),a("li",[e._v("Classify standard values with type")]),e._v(" "),a("li",[e._v("Classify standard components with type")]),e._v(" "),a("li",[e._v("Classify standard operators with type")]),e._v(" "),a("li",[e._v("Classify standard functions with type")])]),e._v(" "),a("p",[e._v("Completions")]),e._v(" "),a("ul",[a("li",[e._v("Triggered with letters, . or ctrl+space, except in foreach entity")]),e._v(" "),a("li",[e._v("If expecting component, show list of all standard and user components")]),e._v(" "),a("li",[e._v("If not, show list of all standard values, functions and user values")]),e._v(" "),a("li",[e._v("! needs lots of cleaning !")])]),e._v(" "),a("p",[e._v("Signatures")]),e._v(" "),a("ul",[a("li",[e._v("! Works only with functions not with operators !")]),e._v(" "),a("li",[e._v("Show standard function : type and description")])]),e._v(" "),a("p",[e._v("Privately")]),e._v(" "),a("ul",[a("li",[e._v("Maintain list of files and their root nodes")]),e._v(" "),a("li",[e._v("Maintain last version of the game")]),e._v(" "),a("li",[e._v("Convert text positions to xtext nodes")])]),e._v(" "),a("h2",{attrs:{id:"validation-package"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#validation-package"}},[e._v("#")]),e._v(" Validation package")]),e._v(" "),a("h3",{attrs:{id:"validator-java"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#validator-java"}},[e._v("#")]),e._v(" Validator.java")]),e._v(" "),a("ul",[a("li",[e._v("Modify file: Validate syntax, scope and types")]),e._v(" "),a("li",[e._v("Delete file: Signal deletion to scope and types")]),e._v(" "),a("li",[e._v("Merge all problems in result.problems")]),e._v(" "),a("li",[e._v("Save typed functions and components in result.game")]),e._v(" "),a("li",[e._v("Detect if result has problems with error severity to signal validity of model")])]),e._v(" "),a("h3",{attrs:{id:"syntaxvalidator-java"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#syntaxvalidator-java"}},[e._v("#")]),e._v(" SyntaxValidator.java")]),e._v(" "),a("ul",[a("li",[e._v("Inject parser generated by xtext")]),e._v(" "),a("li",[e._v("Convert xtext parsing errors to syntaxerror problems")]),e._v(" "),a("li",[e._v("Return parsed ast model and problems")])]),e._v(" "),a("h3",{attrs:{id:"scopevalidator-java"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scopevalidator-java"}},[e._v("#")]),e._v(" ScopeValidator.java")]),e._v(" "),a("ul",[a("li",[e._v("Clear obsolete memory")]),e._v(" "),a("li",[e._v("Walk the parsed model")]),e._v(" "),a("li",[e._v("Build result with the expression graph and problems")])]),e._v(" "),a("p",[e._v("Variables")]),e._v(" "),a("ul",[a("li",[e._v("Declare variables: Query entity and assigning value for the first time")]),e._v(" "),a("li",[e._v("Standard variable: Redefinition error")]),e._v(" "),a("li",[e._v("Declared variable: Bind to declaration")]),e._v(" "),a("li",[e._v("Undeclared variable: Declare it")]),e._v(" "),a("li",[e._v("Access variable: In value expressions and cell entities")]),e._v(" "),a("li",[e._v("Standard variable : Type it")]),e._v(" "),a("li",[e._v("Declared variable: Bind to declaration")]),e._v(" "),a("li",[e._v("Undeclared variable: Undefined error")])]),e._v(" "),a("p",[e._v("Components")]),e._v(" "),a("ul",[a("li",[e._v("Declare component: Cells for the first time")]),e._v(" "),a("li",[e._v("Standard component: Do nothing")]),e._v(" "),a("li",[e._v("Declared component: Do nothing")]),e._v(" "),a("li",[e._v("Undeclared component: Declare it")]),e._v(" "),a("li",[e._v("Access component: Cells")]),e._v(" "),a("li",[e._v("Standard component: Type it")]),e._v(" "),a("li",[e._v("Declared component: Bind to declaration")]),e._v(" "),a("li",[e._v("! Undeclared component: Never happens !")])]),e._v(" "),a("p",[e._v("Functions")]),e._v(" "),a("ul",[a("li",[e._v("! Declare functions: Never happens !")]),e._v(" "),a("li",[e._v("Access function: In assignment, unary, binary and applications")]),e._v(" "),a("li",[e._v("Standard function: Type it, bind same type variables")]),e._v(" "),a("li",[e._v("Non standard function: Undefined error in name")])]),e._v(" "),a("p",[e._v("Blocks")]),e._v(" "),a("ul",[a("li",[e._v("Standard block: Type it")]),e._v(" "),a("li",[e._v("Non standard block: Undefined error")]),e._v(" "),a("li",[e._v("Standard binding block: Type it")]),e._v(" "),a("li",[e._v("Non standard block: Undefined error")])]),e._v(" "),a("h3",{attrs:{id:"typevalidator-java"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typevalidator-java"}},[e._v("#")]),e._v(" TypeValidator.java")]),e._v(" "),a("p",[e._v("Invalidate obsolete memory")]),e._v(" "),a("ul",[a("li",[e._v("Remove file references from clusters")]),e._v(" "),a("li",[e._v("Forget all components defined in now empty clusters")]),e._v(" "),a("li",[e._v("Forget file existed")])]),e._v(" "),a("p",[e._v("Validate new nodes")]),e._v(" "),a("ul",[a("li",[e._v("Walk each connected component")]),e._v(" "),a("li",[e._v("If component has been defined: Merge with definition cluster")]),e._v(" "),a("li",[e._v("Save information provided by file in cluster: Types and components")])]),e._v(" "),a("p",[e._v("Check clusters")]),e._v(" "),a("ul",[a("li",[e._v("! erase all memory !")]),e._v(" "),a("li",[e._v("! get all clusters ! should be affected ones only and do incremental")]),e._v(" "),a("li",[e._v("Count types in cluster")]),e._v(" "),a("li",[e._v("If zero types: Undecidable type error in each node of the cluster")]),e._v(" "),a("li",[e._v("If one type: Type all components of cluster with that type")]),e._v(" "),a("li",[e._v("If more types: Incompatible type error in each node of the cluster")])]),e._v(" "),a("p",[e._v("Type functions")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("! Get all functions defined in all files !")])]),e._v(" "),a("li",[a("p",[e._v("Type systems with systemType")])]),e._v(" "),a("li",[a("p",[e._v("Convert functions to userFunctions and add to result")])]),e._v(" "),a("li",[a("p",[e._v("! Generate incremental problems only !")])])]),e._v(" "),a("h2",{attrs:{id:"model-package"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#model-package"}},[e._v("#")]),e._v(" Model package")]),e._v(" "),a("h3",{attrs:{id:"expressionnode-java"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expressionnode-java"}},[e._v("#")]),e._v(" ExpressionNode.java")]),e._v(" "),a("h3",{attrs:{id:"expressiongraph-java"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expressiongraph-java"}},[e._v("#")]),e._v(" ExpressionGraph.java")]),e._v(" "),a("h3",{attrs:{id:"configuration-java"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-java"}},[e._v("#")]),e._v(" Configuration.java")]),e._v(" "),a("h3",{attrs:{id:"expressiongraph"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expressiongraph"}},[e._v("#")]),e._v(" ExpressionGraph")]),e._v(" "),a("ul",[a("li",[e._v("Maintain set of expression nodes. One per connected component.")]),e._v(" "),a("li",[e._v("Convert expressions to ExpressionNodes")]),e._v(" "),a("li",[e._v("Add bindings to each node of a binding")]),e._v(" "),a("li",[e._v("Add a typing to a node with a reason")]),e._v(" "),a("li",[e._v("! Add connected component when typed if it has no bindings !")]),e._v(" "),a("li",[e._v("! When binding two nodes, if both are root, remove one !")]),e._v(" "),a("li",[e._v("! if none are root add one as root !")])]),e._v(" "),a("h2",{attrs:{id:"library-package"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#library-package"}},[e._v("#")]),e._v(" Library package")]),e._v(" "),a("ul",[a("li",[e._v("Define types: Atomic types, Function types, Type variables")]),e._v(" "),a("li",[e._v("Define symbols: Values, Components, Functions")]),e._v(" "),a("li",[e._v("Define classification of symbols")]),e._v(" "),a("li",[e._v("Define validation rules: Binding reason, Typing reason, Problem kind")]),e._v(" "),a("li",[e._v("Load all definitions from definition files (or enum instances)")]),e._v(" "),a("li",[e._v("Maintain bidirectional maps of symbol -> name")]),e._v(" "),a("li",[e._v("Build type name strings from simpler ones")])]),e._v(" "),a("h2",{attrs:{id:"generator-package"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#generator-package"}},[e._v("#")]),e._v(" Generator package")]),e._v(" "),a("h1",{attrs:{id:"flow-view"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flow-view"}},[e._v("#")]),e._v(" Flow view")]),e._v(" "),a("p",[e._v("All paths start in the language client (vscode)")]),e._v(" "),a("h2",{attrs:{id:"extension-activated"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extension-activated"}},[e._v("#")]),e._v(" Extension activated")]),e._v(" "),a("ul",[a("li",[e._v("Main js: activate")]),e._v(" "),a("li",[e._v("Main java: main")]),e._v(" "),a("li",[e._v("Server: connect")]),e._v(" "),a("li",[e._v("... Wait for client connection")]),e._v(" "),a("li",[e._v("Server: initialize")]),e._v(" "),a("li",[e._v("... Wait for client initialized")]),e._v(" "),a("li",[e._v("Server: initialized")]),e._v(" "),a("li",[e._v("Project: initialize")]),e._v(" "),a("li",[a("em",[e._v("Build flow")])])]),e._v(" "),a("h2",{attrs:{id:"folders-modified"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#folders-modified"}},[e._v("#")]),e._v(" Folders modified")]),e._v(" "),a("ul",[a("li",[e._v("FileWatcher: detect")]),e._v(" "),a("li",[e._v("Server: workspaceModified")]),e._v(" "),a("li",[e._v("If folder removal, stop")]),e._v(" "),a("li",[e._v("Project: initialize")]),e._v(" "),a("li",[a("em",[e._v("Build flow")])])]),e._v(" "),a("h2",{attrs:{id:"files-modified"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#files-modified"}},[e._v("#")]),e._v(" Files modified")]),e._v(" "),a("ul",[a("li",[e._v("FileWatcher: detect")]),e._v(" "),a("li",[e._v("Server: fileChanged")]),e._v(" "),a("li",[e._v("If file removal: "),a("em",[e._v("Build flow with delete")])]),e._v(" "),a("li",[e._v("If file added or modified: *Build flow")])]),e._v(" "),a("h2",{attrs:{id:"language-services"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#language-services"}},[e._v("#")]),e._v(" Language services")]),e._v(" "),a("ul",[a("li",[e._v("Client: detect service request")]),e._v(" "),a("li",[e._v("Server: onService")]),e._v(" "),a("li",[e._v("Project: onService")]),e._v(" "),a("li",[e._v("Inspector: serve")]),e._v(" "),a("li",[e._v("return result back up")])]),e._v(" "),a("h2",{attrs:{id:"client-closed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#client-closed"}},[e._v("#")]),e._v(" Client closed")]),e._v(" "),a("ul",[a("li",[e._v("Server: shutdown")]),e._v(" "),a("li",[e._v("Exit")])]),e._v(" "),a("h2",{attrs:{id:"build-flow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build-flow"}},[e._v("#")]),e._v(" Build flow")]),e._v(" "),a("ul",[a("li",[e._v("Validator: validate")]),e._v(" "),a("li",[e._v("SyntaxValidator: validate")]),e._v(" "),a("li",[e._v("ScopeValidator: validate")]),e._v(" "),a("li",[e._v("TypeValidator: validate")]),e._v(" "),a("li",[e._v("Project: check results")]),e._v(" "),a("li",[e._v("Server: publish diagnostics")]),e._v(" "),a("li",[e._v("Generator: generate")]),e._v(" "),a("li",[e._v("Unity, Unreal, Godot: generate")])])])}),[],!1,null,null,null);i.default=n.exports}}]);