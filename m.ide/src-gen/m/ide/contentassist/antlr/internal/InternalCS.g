/*
 * generated by Xtext
 */
grammar InternalCS;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package m.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package m.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import m.services.CSGrammarAccess;

}
@parser::members {
	private CSGrammarAccess grammarAccess;

	public void setGrammarAccess(CSGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleFile
entryRuleFile
:
{ before(grammarAccess.getFileRule()); }
	 ruleFile
{ after(grammarAccess.getFileRule()); } 
	 EOF 
;

// Rule File
ruleFile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFileAccess().getGroup()); }
		(rule__File__Group__0)
		{ after(grammarAccess.getFileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUsing
entryRuleUsing
:
{ before(grammarAccess.getUsingRule()); }
	 ruleUsing
{ after(grammarAccess.getUsingRule()); } 
	 EOF 
;

// Rule Using
ruleUsing 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUsingAccess().getGroup()); }
		(rule__Using__Group__0)
		{ after(grammarAccess.getUsingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getGroup()); }
		(rule__Type__Group__0)
		{ after(grammarAccess.getTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMember
entryRuleMember
:
{ before(grammarAccess.getMemberRule()); }
	 ruleMember
{ after(grammarAccess.getMemberRule()); } 
	 EOF 
;

// Rule Member
ruleMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMemberAccess().getGroup()); }
		(rule__Member__Group__0)
		{ after(grammarAccess.getMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnotation
entryRuleAnnotation
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotationAccess().getGroup()); }
		(rule__Annotation__Group__0)
		{ after(grammarAccess.getAnnotationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeName
entryRuleTypeName
:
{ before(grammarAccess.getTypeNameRule()); }
	 ruleTypeName
{ after(grammarAccess.getTypeNameRule()); } 
	 EOF 
;

// Rule TypeName
ruleTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeNameAccess().getGroup()); }
		(rule__TypeName__Group__0)
		{ after(grammarAccess.getTypeNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField
entryRuleField
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccess().getGroup()); }
		(rule__Field__Group__0)
		{ after(grammarAccess.getFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgument
entryRuleArgument
:
{ before(grammarAccess.getArgumentRule()); }
	 ruleArgument
{ after(grammarAccess.getArgumentRule()); } 
	 EOF 
;

// Rule Argument
ruleArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentAccess().getGroup()); }
		(rule__Argument__Group__0)
		{ after(grammarAccess.getArgumentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethod
entryRuleMethod
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodAccess().getGroup()); }
		(rule__Method__Group__0)
		{ after(grammarAccess.getMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommand
entryRuleCommand
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandAccess().getAlternatives()); }
		(rule__Command__Alternatives)
		{ after(grammarAccess.getCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturn
entryRuleReturn
:
{ before(grammarAccess.getReturnRule()); }
	 ruleReturn
{ after(grammarAccess.getReturnRule()); } 
	 EOF 
;

// Rule Return
ruleReturn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnAccess().getGroup()); }
		(rule__Return__Group__0)
		{ after(grammarAccess.getReturnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAccess
entryRuleAccess
:
{ before(grammarAccess.getAccessRule()); }
	 ruleAccess
{ after(grammarAccess.getAccessRule()); } 
	 EOF 
;

// Rule Access
ruleAccess 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAccessAccess().getGroup()); }
		(rule__Access__Group__0)
		{ after(grammarAccess.getAccessAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePortion
entryRulePortion
:
{ before(grammarAccess.getPortionRule()); }
	 rulePortion
{ after(grammarAccess.getPortionRule()); } 
	 EOF 
;

// Rule Portion
rulePortion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPortionAccess().getAlternatives()); }
		(rule__Portion__Alternatives)
		{ after(grammarAccess.getPortionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFor
entryRuleFor
:
{ before(grammarAccess.getForRule()); }
	 ruleFor
{ after(grammarAccess.getForRule()); } 
	 EOF 
;

// Rule For
ruleFor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForAccess().getGroup()); }
		(rule__For__Group__0)
		{ after(grammarAccess.getForAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIf
entryRuleIf
:
{ before(grammarAccess.getIfRule()); }
	 ruleIf
{ after(grammarAccess.getIfRule()); } 
	 EOF 
;

// Rule If
ruleIf 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfAccess().getGroup()); }
		(rule__If__Group__0)
		{ after(grammarAccess.getIfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElseIf
entryRuleElseIf
:
{ before(grammarAccess.getElseIfRule()); }
	 ruleElseIf
{ after(grammarAccess.getElseIfRule()); } 
	 EOF 
;

// Rule ElseIf
ruleElseIf 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElseIfAccess().getGroup()); }
		(rule__ElseIf__Group__0)
		{ after(grammarAccess.getElseIfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElse
entryRuleElse
:
{ before(grammarAccess.getElseRule()); }
	 ruleElse
{ after(grammarAccess.getElseRule()); } 
	 EOF 
;

// Rule Else
ruleElse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElseAccess().getGroup()); }
		(rule__Else__Group__0)
		{ after(grammarAccess.getElseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhile
entryRuleWhile
:
{ before(grammarAccess.getWhileRule()); }
	 ruleWhile
{ after(grammarAccess.getWhileRule()); } 
	 EOF 
;

// Rule While
ruleWhile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileAccess().getGroup()); }
		(rule__While__Group__0)
		{ after(grammarAccess.getWhileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomic
entryRuleAtomic
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicAccess().getAlternatives()); }
		(rule__Atomic__Alternatives)
		{ after(grammarAccess.getAtomicAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitializeVariable
entryRuleInitializeVariable
:
{ before(grammarAccess.getInitializeVariableRule()); }
	 ruleInitializeVariable
{ after(grammarAccess.getInitializeVariableRule()); } 
	 EOF 
;

// Rule InitializeVariable
ruleInitializeVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitializeVariableAccess().getGroup()); }
		(rule__InitializeVariable__Group__0)
		{ after(grammarAccess.getInitializeVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLambda
entryRuleLambda
:
{ before(grammarAccess.getLambdaRule()); }
	 ruleLambda
{ after(grammarAccess.getLambdaRule()); } 
	 EOF 
;

// Rule Lambda
ruleLambda 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLambdaAccess().getGroup()); }
		(rule__Lambda__Group__0)
		{ after(grammarAccess.getLambdaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolean0
entryRuleBoolean0
:
{ before(grammarAccess.getBoolean0Rule()); }
	 ruleBoolean0
{ after(grammarAccess.getBoolean0Rule()); } 
	 EOF 
;

// Rule Boolean0
ruleBoolean0 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolean0Access().getGroup()); }
		(rule__Boolean0__Group__0)
		{ after(grammarAccess.getBoolean0Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolean1
entryRuleBoolean1
:
{ before(grammarAccess.getBoolean1Rule()); }
	 ruleBoolean1
{ after(grammarAccess.getBoolean1Rule()); } 
	 EOF 
;

// Rule Boolean1
ruleBoolean1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolean1Access().getGroup()); }
		(rule__Boolean1__Group__0)
		{ after(grammarAccess.getBoolean1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolean2
entryRuleBoolean2
:
{ before(grammarAccess.getBoolean2Rule()); }
	 ruleBoolean2
{ after(grammarAccess.getBoolean2Rule()); } 
	 EOF 
;

// Rule Boolean2
ruleBoolean2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolean2Access().getAlternatives()); }
		(rule__Boolean2__Alternatives)
		{ after(grammarAccess.getBoolean2Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolean3
entryRuleBoolean3
:
{ before(grammarAccess.getBoolean3Rule()); }
	 ruleBoolean3
{ after(grammarAccess.getBoolean3Rule()); } 
	 EOF 
;

// Rule Boolean3
ruleBoolean3 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolean3Access().getBoolean4ParserRuleCall()); }
		ruleBoolean4
		{ after(grammarAccess.getBoolean3Access().getBoolean4ParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolean4
entryRuleBoolean4
:
{ before(grammarAccess.getBoolean4Rule()); }
	 ruleBoolean4
{ after(grammarAccess.getBoolean4Rule()); } 
	 EOF 
;

// Rule Boolean4
ruleBoolean4 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolean4Access().getGroup()); }
		(rule__Boolean4__Group__0)
		{ after(grammarAccess.getBoolean4Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddition
entryRuleAddition
:
{ before(grammarAccess.getAdditionRule()); }
	 ruleAddition
{ after(grammarAccess.getAdditionRule()); } 
	 EOF 
;

// Rule Addition
ruleAddition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditionAccess().getGroup()); }
		(rule__Addition__Group__0)
		{ after(grammarAccess.getAdditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplication
entryRuleMultiplication
:
{ before(grammarAccess.getMultiplicationRule()); }
	 ruleMultiplication
{ after(grammarAccess.getMultiplicationRule()); } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicationAccess().getGroup()); }
		(rule__Multiplication__Group__0)
		{ after(grammarAccess.getMultiplicationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBitwise
entryRuleBitwise
:
{ before(grammarAccess.getBitwiseRule()); }
	 ruleBitwise
{ after(grammarAccess.getBitwiseRule()); } 
	 EOF 
;

// Rule Bitwise
ruleBitwise 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBitwiseAccess().getGroup()); }
		(rule__Bitwise__Group__0)
		{ after(grammarAccess.getBitwiseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnary
entryRuleUnary
:
{ before(grammarAccess.getUnaryRule()); }
	 ruleUnary
{ after(grammarAccess.getUnaryRule()); } 
	 EOF 
;

// Rule Unary
ruleUnary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryAccess().getGroup()); }
		(rule__Unary__Group__0)
		{ after(grammarAccess.getUnaryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TypeEnum
ruleTypeEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeEnumAccess().getAlternatives()); }
		(rule__TypeEnum__Alternatives)
		{ after(grammarAccess.getTypeEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Visibility
ruleVisibility
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisibilityAccess().getAlternatives()); }
		(rule__Visibility__Alternatives)
		{ after(grammarAccess.getVisibilityAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule RelationType
ruleRelationType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationTypeAccess().getAlternatives()); }
		(rule__RelationType__Alternatives)
		{ after(grammarAccess.getRelationTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AssignmentType
ruleAssignmentType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentTypeAccess().getAlternatives()); }
		(rule__AssignmentType__Alternatives)
		{ after(grammarAccess.getAssignmentTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__ValueAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMemberAccess().getValueTypeParserRuleCall_3_0_0()); }
		ruleType
		{ after(grammarAccess.getMemberAccess().getValueTypeParserRuleCall_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMemberAccess().getValueMethodParserRuleCall_3_0_1()); }
		ruleMethod
		{ after(grammarAccess.getMemberAccess().getValueMethodParserRuleCall_3_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getMemberAccess().getValueFieldParserRuleCall_3_0_2()); }
		ruleField
		{ after(grammarAccess.getMemberAccess().getValueFieldParserRuleCall_3_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getTypeAssignment_2_0()); }
		(rule__Method__TypeAssignment_2_0)
		{ after(grammarAccess.getMethodAccess().getTypeAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getMethodAccess().getGroup_2_1()); }
		(rule__Method__Group_2_1__0)
		{ after(grammarAccess.getMethodAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getForParserRuleCall_0()); }
		ruleFor
		{ after(grammarAccess.getCommandAccess().getForParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getIfParserRuleCall_1()); }
		ruleIf
		{ after(grammarAccess.getCommandAccess().getIfParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getWhileParserRuleCall_2()); }
		ruleWhile
		{ after(grammarAccess.getCommandAccess().getWhileParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getGroup_3()); }
		(rule__Command__Group_3__0)
		{ after(grammarAccess.getCommandAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getGroup_4()); }
		(rule__Command__Group_4__0)
		{ after(grammarAccess.getCommandAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getVarAssignment_0_0()); }
		(rule__Assignment__VarAssignment_0_0)
		{ after(grammarAccess.getAssignmentAccess().getVarAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentAccess().getTypeAssignment_0_1()); }
		(rule__Assignment__TypeAssignment_0_1)
		{ after(grammarAccess.getAssignmentAccess().getTypeAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup_2_0()); }
		(rule__Assignment__Group_2_0__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentAccess().getIncrementAssignment_2_1()); }
		(rule__Assignment__IncrementAssignment_2_1)
		{ after(grammarAccess.getAssignmentAccess().getIncrementAssignment_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentAccess().getDecrementAssignment_2_2()); }
		(rule__Assignment__DecrementAssignment_2_2)
		{ after(grammarAccess.getAssignmentAccess().getDecrementAssignment_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortionAccess().getGroup_0()); }
		(rule__Portion__Group_0__0)
		{ after(grammarAccess.getPortionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPortionAccess().getGroup_1()); }
		(rule__Portion__Group_1__0)
		{ after(grammarAccess.getPortionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPortionAccess().getGroup_2()); }
		(rule__Portion__Group_2__0)
		{ after(grammarAccess.getPortionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPortionAccess().getGroup_3()); }
		(rule__Portion__Group_3__0)
		{ after(grammarAccess.getPortionAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getAccessParserRuleCall_0()); }
		ruleAccess
		{ after(grammarAccess.getAtomicAccess().getAccessParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_1()); }
		(rule__Atomic__Group_1__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_2()); }
		(rule__Atomic__Group_2__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_3()); }
		(rule__Atomic__Group_3__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_0()); }
		(rule__Expression__Group_0__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getLambdaParserRuleCall_1()); }
		ruleLambda
		{ after(grammarAccess.getExpressionAccess().getLambdaParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getBoolean0ParserRuleCall_2()); }
		ruleBoolean0
		{ after(grammarAccess.getExpressionAccess().getBoolean0ParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean2__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolean2Access().getBoolean3ParserRuleCall_0()); }
		ruleBoolean3
		{ after(grammarAccess.getBoolean2Access().getBoolean3ParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBoolean2Access().getGroup_1()); }
		(rule__Boolean2__Group_1__0)
		{ after(grammarAccess.getBoolean2Access().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getGroup_1_0_0()); }
		(rule__Addition__Group_1_0_0__0)
		{ after(grammarAccess.getAdditionAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditionAccess().getGroup_1_0_1()); }
		(rule__Addition__Group_1_0_1__0)
		{ after(grammarAccess.getAdditionAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getGroup_1_0_0()); }
		(rule__Multiplication__Group_1_0_0__0)
		{ after(grammarAccess.getMultiplicationAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicationAccess().getGroup_1_0_1()); }
		(rule__Multiplication__Group_1_0_1__0)
		{ after(grammarAccess.getMultiplicationAccess().getGroup_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicationAccess().getGroup_1_0_2()); }
		(rule__Multiplication__Group_1_0_2__0)
		{ after(grammarAccess.getMultiplicationAccess().getGroup_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitwise__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitwiseAccess().getOpAmpersandKeyword_1_1_0_0()); }
		'&'
		{ after(grammarAccess.getBitwiseAccess().getOpAmpersandKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBitwiseAccess().getOpVerticalLineKeyword_1_1_0_1()); }
		'|'
		{ after(grammarAccess.getBitwiseAccess().getOpVerticalLineKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getBitwiseAccess().getOpTildeKeyword_1_1_0_2()); }
		'~'
		{ after(grammarAccess.getBitwiseAccess().getOpTildeKeyword_1_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryAccess().getGroup_1_0()); }
		(rule__Unary__Group_1_0__0)
		{ after(grammarAccess.getUnaryAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryAccess().getGroup_1_1()); }
		(rule__Unary__Group_1_1__0)
		{ after(grammarAccess.getUnaryAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_0()); }
		ruleAtomic
		{ after(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
		(rule__Primary__Group_1__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeEnumAccess().getClassEnumLiteralDeclaration_0()); }
		('class')
		{ after(grammarAccess.getTypeEnumAccess().getClassEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeEnumAccess().getStructEnumLiteralDeclaration_1()); }
		('struct')
		{ after(grammarAccess.getTypeEnumAccess().getStructEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0()); }
		('public')
		{ after(grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1()); }
		('private')
		{ after(grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityAccess().getProtectedEnumLiteralDeclaration_2()); }
		('protected')
		{ after(grammarAccess.getVisibilityAccess().getProtectedEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getVisibilityAccess().getInternalEnumLiteralDeclaration_3()); }
		('internal')
		{ after(grammarAccess.getVisibilityAccess().getInternalEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationTypeAccess().getOverEnumLiteralDeclaration_0()); }
		('>')
		{ after(grammarAccess.getRelationTypeAccess().getOverEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationTypeAccess().getUnderEnumLiteralDeclaration_1()); }
		('<')
		{ after(grammarAccess.getRelationTypeAccess().getUnderEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationTypeAccess().getEqualEnumLiteralDeclaration_2()); }
		('==')
		{ after(grammarAccess.getRelationTypeAccess().getEqualEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationTypeAccess().getNotequalEnumLiteralDeclaration_3()); }
		('!=')
		{ after(grammarAccess.getRelationTypeAccess().getNotequalEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getRelationTypeAccess().getOverorequalEnumLiteralDeclaration_4()); }
		('>=')
		{ after(grammarAccess.getRelationTypeAccess().getOverorequalEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getRelationTypeAccess().getUnderorequalEnumLiteralDeclaration_5()); }
		('<=')
		{ after(grammarAccess.getRelationTypeAccess().getUnderorequalEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentTypeAccess().getSetEnumLiteralDeclaration_0()); }
		('=')
		{ after(grammarAccess.getAssignmentTypeAccess().getSetEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentTypeAccess().getIncreaseEnumLiteralDeclaration_1()); }
		('+=')
		{ after(grammarAccess.getAssignmentTypeAccess().getIncreaseEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentTypeAccess().getDecreaseEnumLiteralDeclaration_2()); }
		('-=')
		{ after(grammarAccess.getAssignmentTypeAccess().getDecreaseEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentTypeAccess().getMultiplyEnumLiteralDeclaration_3()); }
		('*=')
		{ after(grammarAccess.getAssignmentTypeAccess().getMultiplyEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentTypeAccess().getDivideEnumLiteralDeclaration_4()); }
		('/=')
		{ after(grammarAccess.getAssignmentTypeAccess().getDivideEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentTypeAccess().getModulusEnumLiteralDeclaration_5()); }
		('%=')
		{ after(grammarAccess.getAssignmentTypeAccess().getModulusEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentTypeAccess().getAndEnumLiteralDeclaration_6()); }
		('&=')
		{ after(grammarAccess.getAssignmentTypeAccess().getAndEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentTypeAccess().getOrEnumLiteralDeclaration_7()); }
		('|=')
		{ after(grammarAccess.getAssignmentTypeAccess().getOrEnumLiteralDeclaration_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__File__Group__0__Impl
	rule__File__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAccess().getUsingsAssignment_0()); }
	(rule__File__UsingsAssignment_0)*
	{ after(grammarAccess.getFileAccess().getUsingsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__File__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAccess().getTypesAssignment_1()); }
	(rule__File__TypesAssignment_1)*
	{ after(grammarAccess.getFileAccess().getTypesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Using__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Using__Group__0__Impl
	rule__Using__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Using__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsingAccess().getUsingKeyword_0()); }
	'using'
	{ after(grammarAccess.getUsingAccess().getUsingKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Using__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Using__Group__1__Impl
	rule__Using__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Using__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsingAccess().getNameAssignment_1()); }
	(rule__Using__NameAssignment_1)
	{ after(grammarAccess.getUsingAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Using__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Using__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Using__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUsingAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getUsingAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getNamesAssignment_0()); }
	(rule__QualifiedName__NamesAssignment_0)
	{ after(grammarAccess.getQualifiedNameAccess().getNamesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getNamesAssignment_1_1()); }
	(rule__QualifiedName__NamesAssignment_1_1)
	{ after(grammarAccess.getQualifiedNameAccess().getNamesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getSealedAssignment_0()); }
	(rule__Type__SealedAssignment_0)?
	{ after(grammarAccess.getTypeAccess().getSealedAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__1__Impl
	rule__Type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeAssignment_1()); }
	(rule__Type__TypeAssignment_1)
	{ after(grammarAccess.getTypeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__2__Impl
	rule__Type__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getNameAssignment_2()); }
	(rule__Type__NameAssignment_2)
	{ after(grammarAccess.getTypeAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__3__Impl
	rule__Type__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getGroup_3()); }
	(rule__Type__Group_3__0)?
	{ after(grammarAccess.getTypeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__4__Impl
	rule__Type__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__5__Impl
	rule__Type__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getMembersAssignment_5()); }
	(rule__Type__MembersAssignment_5)*
	{ after(grammarAccess.getTypeAccess().getMembersAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_3__0__Impl
	rule__Type__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getColonKeyword_3_0()); }
	':'
	{ after(grammarAccess.getTypeAccess().getColonKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_3__1__Impl
	rule__Type__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getSuperTypesAssignment_3_1()); }
	(rule__Type__SuperTypesAssignment_3_1)
	{ after(grammarAccess.getTypeAccess().getSuperTypesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getGroup_3_2()); }
	(rule__Type__Group_3_2__0)*
	{ after(grammarAccess.getTypeAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_3_2__0__Impl
	rule__Type__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getTypeAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getSuperTypesAssignment_3_2_1()); }
	(rule__Type__SuperTypesAssignment_3_2_1)
	{ after(grammarAccess.getTypeAccess().getSuperTypesAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Member__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Member__Group__0__Impl
	rule__Member__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberAccess().getAnnotationsAssignment_0()); }
	(rule__Member__AnnotationsAssignment_0)*
	{ after(grammarAccess.getMemberAccess().getAnnotationsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Member__Group__1__Impl
	rule__Member__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberAccess().getVisibilityAssignment_1()); }
	(rule__Member__VisibilityAssignment_1)
	{ after(grammarAccess.getMemberAccess().getVisibilityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Member__Group__2__Impl
	rule__Member__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberAccess().getStaticAssignment_2()); }
	(rule__Member__StaticAssignment_2)?
	{ after(grammarAccess.getMemberAccess().getStaticAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Member__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberAccess().getValueAssignment_3()); }
	(rule__Member__ValueAssignment_3)
	{ after(grammarAccess.getMemberAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__0__Impl
	rule__Annotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getAnnotationAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__1__Impl
	rule__Annotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getFunctionAssignment_1()); }
	(rule__Annotation__FunctionAssignment_1)
	{ after(grammarAccess.getAnnotationAccess().getFunctionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__2__Impl
	rule__Annotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getGroup_2()); }
	(rule__Annotation__Group_2__0)?
	{ after(grammarAccess.getAnnotationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getAnnotationAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group_2__0__Impl
	rule__Annotation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group_2__1__Impl
	rule__Annotation__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getParametersAssignment_2_1()); }
	(rule__Annotation__ParametersAssignment_2_1)
	{ after(grammarAccess.getAnnotationAccess().getParametersAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group_2__2__Impl
	rule__Annotation__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getGroup_2_2()); }
	(rule__Annotation__Group_2_2__0)*
	{ after(grammarAccess.getAnnotationAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_2_3()); }
	')'
	{ after(grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group_2_2__0__Impl
	rule__Annotation__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getAnnotationAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getParametersAssignment_2_2_1()); }
	(rule__Annotation__ParametersAssignment_2_2_1)
	{ after(grammarAccess.getAnnotationAccess().getParametersAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeName__Group__0__Impl
	rule__TypeName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameAccess().getNameAssignment_0()); }
	(rule__TypeName__NameAssignment_0)
	{ after(grammarAccess.getTypeNameAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameAccess().getGroup_1()); }
	(rule__TypeName__Group_1__0)?
	{ after(grammarAccess.getTypeNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeName__Group_1__0__Impl
	rule__TypeName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameAccess().getLessThanSignKeyword_1_0()); }
	'<'
	{ after(grammarAccess.getTypeNameAccess().getLessThanSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeName__Group_1__1__Impl
	rule__TypeName__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameAccess().getGenericsAssignment_1_1()); }
	(rule__TypeName__GenericsAssignment_1_1)
	{ after(grammarAccess.getTypeNameAccess().getGenericsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeName__Group_1__2__Impl
	rule__TypeName__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameAccess().getGroup_1_2()); }
	(rule__TypeName__Group_1_2__0)*
	{ after(grammarAccess.getTypeNameAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeName__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameAccess().getGreaterThanSignKeyword_1_3()); }
	'>'
	{ after(grammarAccess.getTypeNameAccess().getGreaterThanSignKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeName__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeName__Group_1_2__0__Impl
	rule__TypeName__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameAccess().getCommaKeyword_1_2_0()); }
	','
	{ after(grammarAccess.getTypeNameAccess().getCommaKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeName__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameAccess().getGenericsAssignment_1_2_1()); }
	(rule__TypeName__GenericsAssignment_1_2_1)
	{ after(grammarAccess.getTypeNameAccess().getGenericsAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getTypeAssignment_0()); }
	(rule__Field__TypeAssignment_0)
	{ after(grammarAccess.getFieldAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getNameAssignment_1()); }
	(rule__Field__NameAssignment_1)
	{ after(grammarAccess.getFieldAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getFieldAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group__0__Impl
	rule__Argument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getAnnotationsAssignment_0()); }
	(rule__Argument__AnnotationsAssignment_0)*
	{ after(grammarAccess.getArgumentAccess().getAnnotationsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group__1__Impl
	rule__Argument__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getRefAssignment_1()); }
	(rule__Argument__RefAssignment_1)?
	{ after(grammarAccess.getArgumentAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group__2__Impl
	rule__Argument__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getTypeAssignment_2()); }
	(rule__Argument__TypeAssignment_2)
	{ after(grammarAccess.getArgumentAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getNameAssignment_3()); }
	(rule__Argument__NameAssignment_3)
	{ after(grammarAccess.getArgumentAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getMethodAction_0()); }
	()
	{ after(grammarAccess.getMethodAccess().getMethodAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getOverrideAssignment_1()); }
	(rule__Method__OverrideAssignment_1)?
	{ after(grammarAccess.getMethodAccess().getOverrideAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__2__Impl
	rule__Method__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getAlternatives_2()); }
	(rule__Method__Alternatives_2)
	{ after(grammarAccess.getMethodAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__3__Impl
	rule__Method__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getNameAssignment_3()); }
	(rule__Method__NameAssignment_3)
	{ after(grammarAccess.getMethodAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__4__Impl
	rule__Method__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getGroup_4()); }
	(rule__Method__Group_4__0)?
	{ after(grammarAccess.getMethodAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__5__Impl
	rule__Method__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_5()); }
	'('
	{ after(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__6__Impl
	rule__Method__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getGroup_6()); }
	(rule__Method__Group_6__0)?
	{ after(grammarAccess.getMethodAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__7__Impl
	rule__Method__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getMethodAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__8__Impl
	rule__Method__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getLeftCurlyBracketKeyword_8()); }
	'{'
	{ after(grammarAccess.getMethodAccess().getLeftCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__9__Impl
	rule__Method__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getCommandsAssignment_9()); }
	(rule__Method__CommandsAssignment_9)*
	{ after(grammarAccess.getMethodAccess().getCommandsAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getMethodAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_2_1__0__Impl
	rule__Method__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getImplicitAssignment_2_1_0()); }
	(rule__Method__ImplicitAssignment_2_1_0)
	{ after(grammarAccess.getMethodAccess().getImplicitAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getOperatorAssignment_2_1_1()); }
	(rule__Method__OperatorAssignment_2_1_1)
	{ after(grammarAccess.getMethodAccess().getOperatorAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_4__0__Impl
	rule__Method__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getLessThanSignKeyword_4_0()); }
	'<'
	{ after(grammarAccess.getMethodAccess().getLessThanSignKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_4__1__Impl
	rule__Method__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getGenericsAssignment_4_1()); }
	(rule__Method__GenericsAssignment_4_1)
	{ after(grammarAccess.getMethodAccess().getGenericsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_4__2__Impl
	rule__Method__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getGroup_4_2()); }
	(rule__Method__Group_4_2__0)*
	{ after(grammarAccess.getMethodAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getGreaterThanSignKeyword_4_3()); }
	'>'
	{ after(grammarAccess.getMethodAccess().getGreaterThanSignKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_4_2__0__Impl
	rule__Method__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getCommaKeyword_4_2_0()); }
	','
	{ after(grammarAccess.getMethodAccess().getCommaKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getGenericsAssignment_4_2_1()); }
	(rule__Method__GenericsAssignment_4_2_1)
	{ after(grammarAccess.getMethodAccess().getGenericsAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_6__0__Impl
	rule__Method__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getArgumentsAssignment_6_0()); }
	(rule__Method__ArgumentsAssignment_6_0)
	{ after(grammarAccess.getMethodAccess().getArgumentsAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getGroup_6_1()); }
	(rule__Method__Group_6_1__0)*
	{ after(grammarAccess.getMethodAccess().getGroup_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_6_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_6_1__0__Impl
	rule__Method__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getCommaKeyword_6_1_0()); }
	','
	{ after(grammarAccess.getMethodAccess().getCommaKeyword_6_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getArgumentsAssignment_6_1_1()); }
	(rule__Method__ArgumentsAssignment_6_1_1)
	{ after(grammarAccess.getMethodAccess().getArgumentsAssignment_6_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_3__0__Impl
	rule__Command__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getAssignmentParserRuleCall_3_0()); }
	ruleAssignment
	{ after(grammarAccess.getCommandAccess().getAssignmentParserRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getCommandAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_4__0__Impl
	rule__Command__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getReturnParserRuleCall_4_0()); }
	ruleReturn
	{ after(grammarAccess.getCommandAccess().getReturnParserRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getSemicolonKeyword_4_1()); }
	';'
	{ after(grammarAccess.getCommandAccess().getSemicolonKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getAlternatives_0()); }
	(rule__Assignment__Alternatives_0)?
	{ after(grammarAccess.getAssignmentAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getAccessAssignment_1()); }
	(rule__Assignment__AccessAssignment_1)
	{ after(grammarAccess.getAssignmentAccess().getAccessAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getAlternatives_2()); }
	(rule__Assignment__Alternatives_2)?
	{ after(grammarAccess.getAssignmentAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_2_0__0__Impl
	rule__Assignment__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getAssignmentTypeAssignment_2_0_0()); }
	(rule__Assignment__AssignmentTypeAssignment_2_0_0)
	{ after(grammarAccess.getAssignmentAccess().getAssignmentTypeAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getExpressionAssignment_2_0_1()); }
	(rule__Assignment__ExpressionAssignment_2_0_1)
	{ after(grammarAccess.getAssignmentAccess().getExpressionAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Return__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Return__Group__0__Impl
	rule__Return__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnAccess().getReturnKeyword_0()); }
	'return'
	{ after(grammarAccess.getReturnAccess().getReturnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Return__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnAccess().getExpressionAssignment_1()); }
	(rule__Return__ExpressionAssignment_1)
	{ after(grammarAccess.getReturnAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Access__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Access__Group__0__Impl
	rule__Access__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessAccess().getNewAssignment_0()); }
	(rule__Access__NewAssignment_0)?
	{ after(grammarAccess.getAccessAccess().getNewAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Access__Group__1__Impl
	rule__Access__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessAccess().getRefAssignment_1()); }
	(rule__Access__RefAssignment_1)?
	{ after(grammarAccess.getAccessAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Access__Group__2__Impl
	rule__Access__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessAccess().getPortionsAssignment_2()); }
	(rule__Access__PortionsAssignment_2)
	{ after(grammarAccess.getAccessAccess().getPortionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Access__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessAccess().getGroup_3()); }
	(rule__Access__Group_3__0)*
	{ after(grammarAccess.getAccessAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Access__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Access__Group_3__0__Impl
	rule__Access__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessAccess().getFullStopKeyword_3_0()); }
	'.'
	{ after(grammarAccess.getAccessAccess().getFullStopKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Access__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessAccess().getPortionsAssignment_3_1()); }
	(rule__Access__PortionsAssignment_3_1)
	{ after(grammarAccess.getAccessAccess().getPortionsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Portion__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_0__0__Impl
	rule__Portion__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getLabelAction_0_0()); }
	()
	{ after(grammarAccess.getPortionAccess().getLabelAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getNameAssignment_0_1()); }
	(rule__Portion__NameAssignment_0_1)
	{ after(grammarAccess.getPortionAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Portion__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_1__0__Impl
	rule__Portion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getMethodCallAction_1_0()); }
	()
	{ after(grammarAccess.getPortionAccess().getMethodCallAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_1__1__Impl
	rule__Portion__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getNameAssignment_1_1()); }
	(rule__Portion__NameAssignment_1_1)
	{ after(grammarAccess.getPortionAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_1__2__Impl
	rule__Portion__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getGroup_1_2()); }
	(rule__Portion__Group_1_2__0)?
	{ after(grammarAccess.getPortionAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_1__3__Impl
	rule__Portion__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getLeftParenthesisKeyword_1_3()); }
	'('
	{ after(grammarAccess.getPortionAccess().getLeftParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_1__4__Impl
	rule__Portion__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getGroup_1_4()); }
	(rule__Portion__Group_1_4__0)?
	{ after(grammarAccess.getPortionAccess().getGroup_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getRightParenthesisKeyword_1_5()); }
	')'
	{ after(grammarAccess.getPortionAccess().getRightParenthesisKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Portion__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_1_2__0__Impl
	rule__Portion__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getLessThanSignKeyword_1_2_0()); }
	'<'
	{ after(grammarAccess.getPortionAccess().getLessThanSignKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_1_2__1__Impl
	rule__Portion__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getGenericsAssignment_1_2_1()); }
	(rule__Portion__GenericsAssignment_1_2_1)
	{ after(grammarAccess.getPortionAccess().getGenericsAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getGreaterThanSignKeyword_1_2_2()); }
	'>'
	{ after(grammarAccess.getPortionAccess().getGreaterThanSignKeyword_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Portion__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_1_4__0__Impl
	rule__Portion__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getExpressionsAssignment_1_4_0()); }
	(rule__Portion__ExpressionsAssignment_1_4_0)
	{ after(grammarAccess.getPortionAccess().getExpressionsAssignment_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getGroup_1_4_1()); }
	(rule__Portion__Group_1_4_1__0)*
	{ after(grammarAccess.getPortionAccess().getGroup_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Portion__Group_1_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_1_4_1__0__Impl
	rule__Portion__Group_1_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_1_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getCommaKeyword_1_4_1_0()); }
	','
	{ after(grammarAccess.getPortionAccess().getCommaKeyword_1_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_1_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_1_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_1_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getExpressionsAssignment_1_4_1_1()); }
	(rule__Portion__ExpressionsAssignment_1_4_1_1)
	{ after(grammarAccess.getPortionAccess().getExpressionsAssignment_1_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Portion__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_2__0__Impl
	rule__Portion__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getInitializationAction_2_0()); }
	()
	{ after(grammarAccess.getPortionAccess().getInitializationAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_2__1__Impl
	rule__Portion__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getNameAssignment_2_1()); }
	(rule__Portion__NameAssignment_2_1)
	{ after(grammarAccess.getPortionAccess().getNameAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_2__2__Impl
	rule__Portion__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getLeftCurlyBracketKeyword_2_2()); }
	'{'
	{ after(grammarAccess.getPortionAccess().getLeftCurlyBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_2__3__Impl
	rule__Portion__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getGroup_2_3()); }
	(rule__Portion__Group_2_3__0)?
	{ after(grammarAccess.getPortionAccess().getGroup_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getRightCurlyBracketKeyword_2_4()); }
	'}'
	{ after(grammarAccess.getPortionAccess().getRightCurlyBracketKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Portion__Group_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_2_3__0__Impl
	rule__Portion__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getInitializationsAssignment_2_3_0()); }
	(rule__Portion__InitializationsAssignment_2_3_0)
	{ after(grammarAccess.getPortionAccess().getInitializationsAssignment_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getGroup_2_3_1()); }
	(rule__Portion__Group_2_3_1__0)*
	{ after(grammarAccess.getPortionAccess().getGroup_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Portion__Group_2_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_2_3_1__0__Impl
	rule__Portion__Group_2_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_2_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getCommaKeyword_2_3_1_0()); }
	','
	{ after(grammarAccess.getPortionAccess().getCommaKeyword_2_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_2_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_2_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_2_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getInitializationsAssignment_2_3_1_1()); }
	(rule__Portion__InitializationsAssignment_2_3_1_1)
	{ after(grammarAccess.getPortionAccess().getInitializationsAssignment_2_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Portion__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_3__0__Impl
	rule__Portion__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getIndexingAction_3_0()); }
	()
	{ after(grammarAccess.getPortionAccess().getIndexingAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_3__1__Impl
	rule__Portion__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getNameAssignment_3_1()); }
	(rule__Portion__NameAssignment_3_1)
	{ after(grammarAccess.getPortionAccess().getNameAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_3__2__Impl
	rule__Portion__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getLeftSquareBracketKeyword_3_2()); }
	'['
	{ after(grammarAccess.getPortionAccess().getLeftSquareBracketKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_3__3__Impl
	rule__Portion__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getIndexAssignment_3_3()); }
	(rule__Portion__IndexAssignment_3_3)
	{ after(grammarAccess.getPortionAccess().getIndexAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portion__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortionAccess().getRightSquareBracketKeyword_3_4()); }
	']'
	{ after(grammarAccess.getPortionAccess().getRightSquareBracketKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__0__Impl
	rule__For__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getForAction_0()); }
	()
	{ after(grammarAccess.getForAccess().getForAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__1__Impl
	rule__For__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getForKeyword_1()); }
	'for'
	{ after(grammarAccess.getForAccess().getForKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__2__Impl
	rule__For__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getForAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__3__Impl
	rule__For__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getInitializationAssignment_3()); }
	(rule__For__InitializationAssignment_3)
	{ after(grammarAccess.getForAccess().getInitializationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__4__Impl
	rule__For__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getForAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__5__Impl
	rule__For__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getConditionAssignment_5()); }
	(rule__For__ConditionAssignment_5)
	{ after(grammarAccess.getForAccess().getConditionAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__6__Impl
	rule__For__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getSemicolonKeyword_6()); }
	';'
	{ after(grammarAccess.getForAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__7__Impl
	rule__For__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getIncrementAssignment_7()); }
	(rule__For__IncrementAssignment_7)
	{ after(grammarAccess.getForAccess().getIncrementAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__8__Impl
	rule__For__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getRightParenthesisKeyword_8()); }
	')'
	{ after(grammarAccess.getForAccess().getRightParenthesisKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__9__Impl
	rule__For__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getLeftCurlyBracketKeyword_9()); }
	'{'
	{ after(grammarAccess.getForAccess().getLeftCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__10__Impl
	rule__For__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getCommandsAssignment_10()); }
	(rule__For__CommandsAssignment_10)*
	{ after(grammarAccess.getForAccess().getCommandsAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getRightCurlyBracketKeyword_11()); }
	'}'
	{ after(grammarAccess.getForAccess().getRightCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__0__Impl
	rule__If__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getIfAction_0()); }
	()
	{ after(grammarAccess.getIfAccess().getIfAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__1__Impl
	rule__If__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getIfKeyword_1()); }
	'if'
	{ after(grammarAccess.getIfAccess().getIfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__2__Impl
	rule__If__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getIfAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__3__Impl
	rule__If__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getExpressionAssignment_3()); }
	(rule__If__ExpressionAssignment_3)
	{ after(grammarAccess.getIfAccess().getExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__4__Impl
	rule__If__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getIfAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__5__Impl
	rule__If__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getIfAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__6__Impl
	rule__If__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getCommandsAssignment_6()); }
	(rule__If__CommandsAssignment_6)*
	{ after(grammarAccess.getIfAccess().getCommandsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__7__Impl
	rule__If__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getIfAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__8__Impl
	rule__If__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getElseIfsAssignment_8()); }
	(rule__If__ElseIfsAssignment_8)*
	{ after(grammarAccess.getIfAccess().getElseIfsAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getElseAssignment_9()); }
	(rule__If__ElseAssignment_9)?
	{ after(grammarAccess.getIfAccess().getElseAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseIf__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIf__Group__0__Impl
	rule__ElseIf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfAccess().getElseIfAction_0()); }
	()
	{ after(grammarAccess.getElseIfAccess().getElseIfAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIf__Group__1__Impl
	rule__ElseIf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfAccess().getElseKeyword_1()); }
	'else'
	{ after(grammarAccess.getElseIfAccess().getElseKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIf__Group__2__Impl
	rule__ElseIf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfAccess().getIfKeyword_2()); }
	'if'
	{ after(grammarAccess.getElseIfAccess().getIfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIf__Group__3__Impl
	rule__ElseIf__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getElseIfAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIf__Group__4__Impl
	rule__ElseIf__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfAccess().getExpressionAssignment_4()); }
	(rule__ElseIf__ExpressionAssignment_4)
	{ after(grammarAccess.getElseIfAccess().getExpressionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIf__Group__5__Impl
	rule__ElseIf__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getElseIfAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIf__Group__6__Impl
	rule__ElseIf__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfAccess().getLeftCurlyBracketKeyword_6()); }
	'{'
	{ after(grammarAccess.getElseIfAccess().getLeftCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIf__Group__7__Impl
	rule__ElseIf__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfAccess().getCommandsAssignment_7()); }
	(rule__ElseIf__CommandsAssignment_7)*
	{ after(grammarAccess.getElseIfAccess().getCommandsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIf__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getElseIfAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Else__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Else__Group__0__Impl
	rule__Else__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseAccess().getElseAction_0()); }
	()
	{ after(grammarAccess.getElseAccess().getElseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Else__Group__1__Impl
	rule__Else__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseAccess().getElseKeyword_1()); }
	'else'
	{ after(grammarAccess.getElseAccess().getElseKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Else__Group__2__Impl
	rule__Else__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getElseAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Else__Group__3__Impl
	rule__Else__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseAccess().getCommandsAssignment_3()); }
	(rule__Else__CommandsAssignment_3)*
	{ after(grammarAccess.getElseAccess().getCommandsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Else__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getElseAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__0__Impl
	rule__While__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getWhileAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__1__Impl
	rule__While__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getWhileAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__2__Impl
	rule__While__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getExpressionAssignment_2()); }
	(rule__While__ExpressionAssignment_2)
	{ after(grammarAccess.getWhileAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__3__Impl
	rule__While__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getWhileAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__4__Impl
	rule__While__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getWhileAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__5__Impl
	rule__While__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getCommandsAssignment_5()); }
	(rule__While__CommandsAssignment_5)*
	{ after(grammarAccess.getWhileAccess().getCommandsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getWhileAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__0__Impl
	rule__Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getLongAction_1_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getLongAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
	(rule__Atomic__ValueAssignment_1_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__0__Impl
	rule__Atomic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getFloatAction_2_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getFloatAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
	(rule__Atomic__ValueAssignment_2_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__0__Impl
	rule__Atomic__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getStringAction_3_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getStringAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
	(rule__Atomic__ValueAssignment_3_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitializeVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitializeVariable__Group__0__Impl
	rule__InitializeVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializeVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializeVariableAccess().getNameAssignment_0()); }
	(rule__InitializeVariable__NameAssignment_0)
	{ after(grammarAccess.getInitializeVariableAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializeVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitializeVariable__Group__1__Impl
	rule__InitializeVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializeVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializeVariableAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getInitializeVariableAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializeVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitializeVariable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializeVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializeVariableAccess().getExpressionAssignment_2()); }
	(rule__InitializeVariable__ExpressionAssignment_2)
	{ after(grammarAccess.getInitializeVariableAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Lambda__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lambda__Group__0__Impl
	rule__Lambda__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLambdaAccess().getLambdaAction_0()); }
	()
	{ after(grammarAccess.getLambdaAccess().getLambdaAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lambda__Group__1__Impl
	rule__Lambda__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLambdaAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getLambdaAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lambda__Group__2__Impl
	rule__Lambda__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLambdaAccess().getArgumentsAssignment_2()); }
	(rule__Lambda__ArgumentsAssignment_2)
	{ after(grammarAccess.getLambdaAccess().getArgumentsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lambda__Group__3__Impl
	rule__Lambda__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLambdaAccess().getGroup_3()); }
	(rule__Lambda__Group_3__0)*
	{ after(grammarAccess.getLambdaAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lambda__Group__4__Impl
	rule__Lambda__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLambdaAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getLambdaAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lambda__Group__5__Impl
	rule__Lambda__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLambdaAccess().getEqualsSignGreaterThanSignKeyword_5()); }
	'=>'
	{ after(grammarAccess.getLambdaAccess().getEqualsSignGreaterThanSignKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lambda__Group__6__Impl
	rule__Lambda__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLambdaAccess().getLeftCurlyBracketKeyword_6()); }
	'{'
	{ after(grammarAccess.getLambdaAccess().getLeftCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lambda__Group__7__Impl
	rule__Lambda__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLambdaAccess().getCommandsAssignment_7()); }
	(rule__Lambda__CommandsAssignment_7)*
	{ after(grammarAccess.getLambdaAccess().getCommandsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lambda__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLambdaAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getLambdaAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Lambda__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lambda__Group_3__0__Impl
	rule__Lambda__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLambdaAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getLambdaAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lambda__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLambdaAccess().getArgumentsAssignment_3_1()); }
	(rule__Lambda__ArgumentsAssignment_3_1)
	{ after(grammarAccess.getLambdaAccess().getArgumentsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_0_0()); }
	(rule__Expression__Group_0_0__0)
	{ after(grammarAccess.getExpressionAccess().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0_0__0__Impl
	rule__Expression__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getCastAction_0_0_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getCastAction_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0_0__1__Impl
	rule__Expression__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_0_0_1()); }
	'('
	{ after(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0_0__2__Impl
	rule__Expression__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getTypeAssignment_0_0_2()); }
	(rule__Expression__TypeAssignment_0_0_2)
	{ after(grammarAccess.getExpressionAccess().getTypeAssignment_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0_0__3__Impl
	rule__Expression__Group_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_0_0_3()); }
	')'
	{ after(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpressionAssignment_0_0_4()); }
	(rule__Expression__ExpressionAssignment_0_0_4)
	{ after(grammarAccess.getExpressionAccess().getExpressionAssignment_0_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Boolean0__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean0__Group__0__Impl
	rule__Boolean0__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean0__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolean0Access().getBoolean1ParserRuleCall_0()); }
	ruleBoolean1
	{ after(grammarAccess.getBoolean0Access().getBoolean1ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean0__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean0__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean0__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolean0Access().getGroup_1()); }
	(rule__Boolean0__Group_1__0)*
	{ after(grammarAccess.getBoolean0Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Boolean0__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean0__Group_1__0__Impl
	rule__Boolean0__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean0__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolean0Access().getOrLeftAction_1_0()); }
	()
	{ after(grammarAccess.getBoolean0Access().getOrLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean0__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean0__Group_1__1__Impl
	rule__Boolean0__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean0__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolean0Access().getVerticalLineVerticalLineKeyword_1_1()); }
	'||'
	{ after(grammarAccess.getBoolean0Access().getVerticalLineVerticalLineKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean0__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean0__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean0__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolean0Access().getRightAssignment_1_2()); }
	(rule__Boolean0__RightAssignment_1_2)
	{ after(grammarAccess.getBoolean0Access().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Boolean1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean1__Group__0__Impl
	rule__Boolean1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolean1Access().getBoolean2ParserRuleCall_0()); }
	ruleBoolean2
	{ after(grammarAccess.getBoolean1Access().getBoolean2ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolean1Access().getGroup_1()); }
	(rule__Boolean1__Group_1__0)*
	{ after(grammarAccess.getBoolean1Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Boolean1__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean1__Group_1__0__Impl
	rule__Boolean1__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean1__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolean1Access().getAndLeftAction_1_0()); }
	()
	{ after(grammarAccess.getBoolean1Access().getAndLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean1__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean1__Group_1__1__Impl
	rule__Boolean1__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean1__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolean1Access().getAmpersandAmpersandKeyword_1_1()); }
	'&&'
	{ after(grammarAccess.getBoolean1Access().getAmpersandAmpersandKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean1__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean1__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean1__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolean1Access().getRightAssignment_1_2()); }
	(rule__Boolean1__RightAssignment_1_2)
	{ after(grammarAccess.getBoolean1Access().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Boolean2__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean2__Group_1__0__Impl
	rule__Boolean2__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean2__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolean2Access().getNotAction_1_0()); }
	()
	{ after(grammarAccess.getBoolean2Access().getNotAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean2__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean2__Group_1__1__Impl
	rule__Boolean2__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean2__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolean2Access().getExclamationMarkKeyword_1_1()); }
	'!'
	{ after(grammarAccess.getBoolean2Access().getExclamationMarkKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean2__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean2__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean2__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolean2Access().getExpressionAssignment_1_2()); }
	(rule__Boolean2__ExpressionAssignment_1_2)
	{ after(grammarAccess.getBoolean2Access().getExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Boolean4__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean4__Group__0__Impl
	rule__Boolean4__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean4__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolean4Access().getAdditionParserRuleCall_0()); }
	ruleAddition
	{ after(grammarAccess.getBoolean4Access().getAdditionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean4__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean4__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean4__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolean4Access().getGroup_1()); }
	(rule__Boolean4__Group_1__0)?
	{ after(grammarAccess.getBoolean4Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Boolean4__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean4__Group_1__0__Impl
	rule__Boolean4__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean4__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolean4Access().getComparisonLeftAction_1_0()); }
	()
	{ after(grammarAccess.getBoolean4Access().getComparisonLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean4__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean4__Group_1__1__Impl
	rule__Boolean4__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean4__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolean4Access().getTypeAssignment_1_1()); }
	(rule__Boolean4__TypeAssignment_1_1)
	{ after(grammarAccess.getBoolean4Access().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean4__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean4__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean4__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolean4Access().getRightAssignment_1_2()); }
	(rule__Boolean4__RightAssignment_1_2)
	{ after(grammarAccess.getBoolean4Access().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__0__Impl
	rule__Addition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
	ruleMultiplication
	{ after(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getGroup_1()); }
	(rule__Addition__Group_1__0)*
	{ after(grammarAccess.getAdditionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1__0__Impl
	rule__Addition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getAlternatives_1_0()); }
	(rule__Addition__Alternatives_1_0)
	{ after(grammarAccess.getAdditionAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
	(rule__Addition__RightAssignment_1_1)
	{ after(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1_0_0__0__Impl
	rule__Addition__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getPlusLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getAdditionAccess().getPlusLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getPlusSignKeyword_1_0_0_1()); }
	'+'
	{ after(grammarAccess.getAdditionAccess().getPlusSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1_0_1__0__Impl
	rule__Addition__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getMinusLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getAdditionAccess().getMinusLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getHyphenMinusKeyword_1_0_1_1()); }
	'-'
	{ after(grammarAccess.getAdditionAccess().getHyphenMinusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__0__Impl
	rule__Multiplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getBitwiseParserRuleCall_0()); }
	ruleBitwise
	{ after(grammarAccess.getMultiplicationAccess().getBitwiseParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getGroup_1()); }
	(rule__Multiplication__Group_1__0)*
	{ after(grammarAccess.getMultiplicationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1__0__Impl
	rule__Multiplication__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getAlternatives_1_0()); }
	(rule__Multiplication__Alternatives_1_0)
	{ after(grammarAccess.getMultiplicationAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
	(rule__Multiplication__RightAssignment_1_1)
	{ after(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1_0_0__0__Impl
	rule__Multiplication__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getTimesLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getMultiplicationAccess().getTimesLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_1_0_0_1()); }
	'*'
	{ after(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1_0_1__0__Impl
	rule__Multiplication__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getDivideLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getMultiplicationAccess().getDivideLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getSolidusKeyword_1_0_1_1()); }
	'/'
	{ after(grammarAccess.getMultiplicationAccess().getSolidusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1_0_2__0__Impl
	rule__Multiplication__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getModulusLeftAction_1_0_2_0()); }
	()
	{ after(grammarAccess.getMultiplicationAccess().getModulusLeftAction_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getPercentSignKeyword_1_0_2_1()); }
	'%'
	{ after(grammarAccess.getMultiplicationAccess().getPercentSignKeyword_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bitwise__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bitwise__Group__0__Impl
	rule__Bitwise__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitwise__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitwiseAccess().getUnaryParserRuleCall_0()); }
	ruleUnary
	{ after(grammarAccess.getBitwiseAccess().getUnaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitwise__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bitwise__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitwise__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitwiseAccess().getGroup_1()); }
	(rule__Bitwise__Group_1__0)*
	{ after(grammarAccess.getBitwiseAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bitwise__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bitwise__Group_1__0__Impl
	rule__Bitwise__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitwise__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitwiseAccess().getBitwiseLeftAction_1_0()); }
	()
	{ after(grammarAccess.getBitwiseAccess().getBitwiseLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitwise__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bitwise__Group_1__1__Impl
	rule__Bitwise__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitwise__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitwiseAccess().getOpAssignment_1_1()); }
	(rule__Bitwise__OpAssignment_1_1)
	{ after(grammarAccess.getBitwiseAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitwise__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bitwise__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitwise__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBitwiseAccess().getRightAssignment_1_2()); }
	(rule__Bitwise__RightAssignment_1_2)
	{ after(grammarAccess.getBitwiseAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unary__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary__Group__0__Impl
	rule__Unary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getUnaryAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryAccess().getAlternatives_1()); }
	(rule__Unary__Alternatives_1)?
	{ after(grammarAccess.getUnaryAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unary__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary__Group_1_0__0__Impl
	rule__Unary__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryAccess().getIncrementLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getUnaryAccess().getIncrementLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryAccess().getPlusSignPlusSignKeyword_1_0_1()); }
	'++'
	{ after(grammarAccess.getUnaryAccess().getPlusSignPlusSignKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unary__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary__Group_1_1__0__Impl
	rule__Unary__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryAccess().getDecrementLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getUnaryAccess().getDecrementLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryAccess().getHyphenMinusHyphenMinusKeyword_1_1_1()); }
	'--'
	{ after(grammarAccess.getUnaryAccess().getHyphenMinusHyphenMinusKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getBracketsAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getBracketsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__1__Impl
	rule__Primary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__2__Impl
	rule__Primary__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); }
	(rule__Primary__ExpressionAssignment_1_2)
	{ after(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_1_3()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__File__UsingsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFileAccess().getUsingsUsingParserRuleCall_0_0()); }
		ruleUsing
		{ after(grammarAccess.getFileAccess().getUsingsUsingParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__File__TypesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFileAccess().getTypesMemberParserRuleCall_1_0()); }
		ruleMember
		{ after(grammarAccess.getFileAccess().getTypesMemberParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Using__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUsingAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getUsingAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__NamesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getNamesIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getQualifiedNameAccess().getNamesIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__NamesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getNamesIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getQualifiedNameAccess().getNamesIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__SealedAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getSealedSealedKeyword_0_0()); }
		(
			{ before(grammarAccess.getTypeAccess().getSealedSealedKeyword_0_0()); }
			'sealed'
			{ after(grammarAccess.getTypeAccess().getSealedSealedKeyword_0_0()); }
		)
		{ after(grammarAccess.getTypeAccess().getSealedSealedKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeTypeEnumEnumRuleCall_1_0()); }
		ruleTypeEnum
		{ after(grammarAccess.getTypeAccess().getTypeTypeEnumEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getNameTypeNameParserRuleCall_2_0()); }
		ruleTypeName
		{ after(grammarAccess.getTypeAccess().getNameTypeNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__SuperTypesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getSuperTypesTypeNameParserRuleCall_3_1_0()); }
		ruleTypeName
		{ after(grammarAccess.getTypeAccess().getSuperTypesTypeNameParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__SuperTypesAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getSuperTypesTypeNameParserRuleCall_3_2_1_0()); }
		ruleTypeName
		{ after(grammarAccess.getTypeAccess().getSuperTypesTypeNameParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__MembersAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getMembersMemberParserRuleCall_5_0()); }
		ruleMember
		{ after(grammarAccess.getTypeAccess().getMembersMemberParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__AnnotationsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMemberAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
		ruleAnnotation
		{ after(grammarAccess.getMemberAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__VisibilityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMemberAccess().getVisibilityVisibilityEnumRuleCall_1_0()); }
		ruleVisibility
		{ after(grammarAccess.getMemberAccess().getVisibilityVisibilityEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__StaticAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMemberAccess().getStaticStaticKeyword_2_0()); }
		(
			{ before(grammarAccess.getMemberAccess().getStaticStaticKeyword_2_0()); }
			'static'
			{ after(grammarAccess.getMemberAccess().getStaticStaticKeyword_2_0()); }
		)
		{ after(grammarAccess.getMemberAccess().getStaticStaticKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMemberAccess().getValueAlternatives_3_0()); }
		(rule__Member__ValueAlternatives_3_0)
		{ after(grammarAccess.getMemberAccess().getValueAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__FunctionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationAccess().getFunctionTypeNameParserRuleCall_1_0()); }
		ruleTypeName
		{ after(grammarAccess.getAnnotationAccess().getFunctionTypeNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__ParametersAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationAccess().getParametersExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getAnnotationAccess().getParametersExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__ParametersAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationAccess().getParametersExpressionParserRuleCall_2_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getAnnotationAccess().getParametersExpressionParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeNameAccess().getNameQualifiedNameParserRuleCall_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getTypeNameAccess().getNameQualifiedNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__GenericsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeNameAccess().getGenericsQualifiedNameParserRuleCall_1_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getTypeNameAccess().getGenericsQualifiedNameParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__GenericsAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeNameAccess().getGenericsQualifiedNameParserRuleCall_1_2_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getTypeNameAccess().getGenericsQualifiedNameParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getTypeTypeNameParserRuleCall_0_0()); }
		ruleTypeName
		{ after(grammarAccess.getFieldAccess().getTypeTypeNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__AnnotationsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
		ruleAnnotation
		{ after(grammarAccess.getArgumentAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getRefRefKeyword_1_0()); }
		(
			{ before(grammarAccess.getArgumentAccess().getRefRefKeyword_1_0()); }
			'ref'
			{ after(grammarAccess.getArgumentAccess().getRefRefKeyword_1_0()); }
		)
		{ after(grammarAccess.getArgumentAccess().getRefRefKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getTypeTypeNameParserRuleCall_2_0()); }
		ruleTypeName
		{ after(grammarAccess.getArgumentAccess().getTypeTypeNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__OverrideAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getOverrideOverrideKeyword_1_0()); }
		(
			{ before(grammarAccess.getMethodAccess().getOverrideOverrideKeyword_1_0()); }
			'override'
			{ after(grammarAccess.getMethodAccess().getOverrideOverrideKeyword_1_0()); }
		)
		{ after(grammarAccess.getMethodAccess().getOverrideOverrideKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__TypeAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getTypeTypeNameParserRuleCall_2_0_0()); }
		ruleTypeName
		{ after(grammarAccess.getMethodAccess().getTypeTypeNameParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ImplicitAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getImplicitImplicitKeyword_2_1_0_0()); }
		(
			{ before(grammarAccess.getMethodAccess().getImplicitImplicitKeyword_2_1_0_0()); }
			'implicit'
			{ after(grammarAccess.getMethodAccess().getImplicitImplicitKeyword_2_1_0_0()); }
		)
		{ after(grammarAccess.getMethodAccess().getImplicitImplicitKeyword_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__OperatorAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getOperatorOperatorKeyword_2_1_1_0()); }
		(
			{ before(grammarAccess.getMethodAccess().getOperatorOperatorKeyword_2_1_1_0()); }
			'operator'
			{ after(grammarAccess.getMethodAccess().getOperatorOperatorKeyword_2_1_1_0()); }
		)
		{ after(grammarAccess.getMethodAccess().getOperatorOperatorKeyword_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__GenericsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getGenericsTypeNameParserRuleCall_4_1_0()); }
		ruleTypeName
		{ after(grammarAccess.getMethodAccess().getGenericsTypeNameParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__GenericsAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getGenericsTypeNameParserRuleCall_4_2_1_0()); }
		ruleTypeName
		{ after(grammarAccess.getMethodAccess().getGenericsTypeNameParserRuleCall_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ArgumentsAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getArgumentsArgumentParserRuleCall_6_0_0()); }
		ruleArgument
		{ after(grammarAccess.getMethodAccess().getArgumentsArgumentParserRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ArgumentsAssignment_6_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getArgumentsArgumentParserRuleCall_6_1_1_0()); }
		ruleArgument
		{ after(grammarAccess.getMethodAccess().getArgumentsArgumentParserRuleCall_6_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__CommandsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getCommandsCommandParserRuleCall_9_0()); }
		ruleCommand
		{ after(grammarAccess.getMethodAccess().getCommandsCommandParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__VarAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getVarVarKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getAssignmentAccess().getVarVarKeyword_0_0_0()); }
			'var'
			{ after(grammarAccess.getAssignmentAccess().getVarVarKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getAssignmentAccess().getVarVarKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__TypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getTypeTypeNameParserRuleCall_0_1_0()); }
		ruleTypeName
		{ after(grammarAccess.getAssignmentAccess().getTypeTypeNameParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__AccessAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getAccessAccessParserRuleCall_1_0()); }
		ruleAccess
		{ after(grammarAccess.getAssignmentAccess().getAccessAccessParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__AssignmentTypeAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getAssignmentTypeAssignmentTypeEnumRuleCall_2_0_0_0()); }
		ruleAssignmentType
		{ after(grammarAccess.getAssignmentAccess().getAssignmentTypeAssignmentTypeEnumRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpressionAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_2_0_1_0()); }
		ruleExpression
		{ after(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__IncrementAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getIncrementPlusSignPlusSignKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getAssignmentAccess().getIncrementPlusSignPlusSignKeyword_2_1_0()); }
			'++'
			{ after(grammarAccess.getAssignmentAccess().getIncrementPlusSignPlusSignKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getAssignmentAccess().getIncrementPlusSignPlusSignKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__DecrementAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getDecrementHyphenMinusHyphenMinusKeyword_2_2_0()); }
		(
			{ before(grammarAccess.getAssignmentAccess().getDecrementHyphenMinusHyphenMinusKeyword_2_2_0()); }
			'--'
			{ after(grammarAccess.getAssignmentAccess().getDecrementHyphenMinusHyphenMinusKeyword_2_2_0()); }
		)
		{ after(grammarAccess.getAssignmentAccess().getDecrementHyphenMinusHyphenMinusKeyword_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getReturnAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__NewAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessAccess().getNewNewKeyword_0_0()); }
		(
			{ before(grammarAccess.getAccessAccess().getNewNewKeyword_0_0()); }
			'new'
			{ after(grammarAccess.getAccessAccess().getNewNewKeyword_0_0()); }
		)
		{ after(grammarAccess.getAccessAccess().getNewNewKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessAccess().getRefRefKeyword_1_0()); }
		(
			{ before(grammarAccess.getAccessAccess().getRefRefKeyword_1_0()); }
			'ref'
			{ after(grammarAccess.getAccessAccess().getRefRefKeyword_1_0()); }
		)
		{ after(grammarAccess.getAccessAccess().getRefRefKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__PortionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessAccess().getPortionsPortionParserRuleCall_2_0()); }
		rulePortion
		{ after(grammarAccess.getAccessAccess().getPortionsPortionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Access__PortionsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessAccess().getPortionsPortionParserRuleCall_3_1_0()); }
		rulePortion
		{ after(grammarAccess.getAccessAccess().getPortionsPortionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortionAccess().getNameIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPortionAccess().getNameIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortionAccess().getNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPortionAccess().getNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__GenericsAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortionAccess().getGenericsTypeNameParserRuleCall_1_2_1_0()); }
		ruleTypeName
		{ after(grammarAccess.getPortionAccess().getGenericsTypeNameParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__ExpressionsAssignment_1_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortionAccess().getExpressionsExpressionParserRuleCall_1_4_0_0()); }
		ruleExpression
		{ after(grammarAccess.getPortionAccess().getExpressionsExpressionParserRuleCall_1_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__ExpressionsAssignment_1_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortionAccess().getExpressionsExpressionParserRuleCall_1_4_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getPortionAccess().getExpressionsExpressionParserRuleCall_1_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__NameAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortionAccess().getNameIDTerminalRuleCall_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPortionAccess().getNameIDTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__InitializationsAssignment_2_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortionAccess().getInitializationsInitializeVariableParserRuleCall_2_3_0_0()); }
		ruleInitializeVariable
		{ after(grammarAccess.getPortionAccess().getInitializationsInitializeVariableParserRuleCall_2_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__InitializationsAssignment_2_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortionAccess().getInitializationsInitializeVariableParserRuleCall_2_3_1_1_0()); }
		ruleInitializeVariable
		{ after(grammarAccess.getPortionAccess().getInitializationsInitializeVariableParserRuleCall_2_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__NameAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortionAccess().getNameIDTerminalRuleCall_3_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPortionAccess().getNameIDTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portion__IndexAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortionAccess().getIndexExpressionParserRuleCall_3_3_0()); }
		ruleExpression
		{ after(grammarAccess.getPortionAccess().getIndexExpressionParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__InitializationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getInitializationAssignmentParserRuleCall_3_0()); }
		ruleAssignment
		{ after(grammarAccess.getForAccess().getInitializationAssignmentParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__ConditionAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getConditionExpressionParserRuleCall_5_0()); }
		ruleExpression
		{ after(grammarAccess.getForAccess().getConditionExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__IncrementAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getIncrementAssignmentParserRuleCall_7_0()); }
		ruleAssignment
		{ after(grammarAccess.getForAccess().getIncrementAssignmentParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__CommandsAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getCommandsCommandParserRuleCall_10_0()); }
		ruleCommand
		{ after(grammarAccess.getForAccess().getCommandsCommandParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__ExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getExpressionExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getIfAccess().getExpressionExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__CommandsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getCommandsCommandParserRuleCall_6_0()); }
		ruleCommand
		{ after(grammarAccess.getIfAccess().getCommandsCommandParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__ElseIfsAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getElseIfsElseIfParserRuleCall_8_0()); }
		ruleElseIf
		{ after(grammarAccess.getIfAccess().getElseIfsElseIfParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__ElseAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getElseElseParserRuleCall_9_0()); }
		ruleElse
		{ after(grammarAccess.getIfAccess().getElseElseParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__ExpressionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseIfAccess().getExpressionExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getElseIfAccess().getExpressionExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIf__CommandsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseIfAccess().getCommandsCommandParserRuleCall_7_0()); }
		ruleCommand
		{ after(grammarAccess.getElseIfAccess().getCommandsCommandParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__CommandsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseAccess().getCommandsCommandParserRuleCall_3_0()); }
		ruleCommand
		{ after(grammarAccess.getElseAccess().getCommandsCommandParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getWhileAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__CommandsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileAccess().getCommandsCommandParserRuleCall_5_0()); }
		ruleCommand
		{ after(grammarAccess.getWhileAccess().getCommandsCommandParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueLONGTerminalRuleCall_1_1_0()); }
		RULE_LONG
		{ after(grammarAccess.getAtomicAccess().getValueLONGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueFLOATTerminalRuleCall_2_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getAtomicAccess().getValueFLOATTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializeVariable__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializeVariableAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getInitializeVariableAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitializeVariable__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializeVariableAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getInitializeVariableAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__ArgumentsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLambdaAccess().getArgumentsArgumentParserRuleCall_2_0()); }
		ruleArgument
		{ after(grammarAccess.getLambdaAccess().getArgumentsArgumentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__ArgumentsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLambdaAccess().getArgumentsArgumentParserRuleCall_3_1_0()); }
		ruleArgument
		{ after(grammarAccess.getLambdaAccess().getArgumentsArgumentParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__CommandsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLambdaAccess().getCommandsCommandParserRuleCall_7_0()); }
		ruleCommand
		{ after(grammarAccess.getLambdaAccess().getCommandsCommandParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__TypeAssignment_0_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getTypeTypeNameParserRuleCall_0_0_2_0()); }
		ruleTypeName
		{ after(grammarAccess.getExpressionAccess().getTypeTypeNameParserRuleCall_0_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpressionAssignment_0_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExpressionBoolean0ParserRuleCall_0_0_4_0()); }
		ruleBoolean0
		{ after(grammarAccess.getExpressionAccess().getExpressionBoolean0ParserRuleCall_0_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean0__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolean0Access().getRightBoolean1ParserRuleCall_1_2_0()); }
		ruleBoolean1
		{ after(grammarAccess.getBoolean0Access().getRightBoolean1ParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean1__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolean1Access().getRightBoolean2ParserRuleCall_1_2_0()); }
		ruleBoolean2
		{ after(grammarAccess.getBoolean1Access().getRightBoolean2ParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean2__ExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolean2Access().getExpressionBoolean3ParserRuleCall_1_2_0()); }
		ruleBoolean3
		{ after(grammarAccess.getBoolean2Access().getExpressionBoolean3ParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean4__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolean4Access().getTypeRelationTypeEnumRuleCall_1_1_0()); }
		ruleRelationType
		{ after(grammarAccess.getBoolean4Access().getTypeRelationTypeEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean4__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolean4Access().getRightAdditionParserRuleCall_1_2_0()); }
		ruleAddition
		{ after(grammarAccess.getBoolean4Access().getRightAdditionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
		ruleMultiplication
		{ after(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getRightBitwiseParserRuleCall_1_1_0()); }
		ruleBitwise
		{ after(grammarAccess.getMultiplicationAccess().getRightBitwiseParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitwise__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitwiseAccess().getOpAlternatives_1_1_0()); }
		(rule__Bitwise__OpAlternatives_1_1_0)
		{ after(grammarAccess.getBitwiseAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bitwise__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitwiseAccess().getRightUnaryParserRuleCall_1_2_0()); }
		ruleUnary
		{ after(grammarAccess.getBitwiseAccess().getRightUnaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionExpressionParserRuleCall_1_2_0()); }
		ruleExpression
		{ after(grammarAccess.getPrimaryAccess().getExpressionExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_LONG : '-'? ('0'..'9')+;

RULE_FLOAT : '-'? ('0'..'9')* '.' ('0'..'9')+ ('e' '-'? ('0'..'9')+)?;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;
