/*
 * generated by Xtext
 */
grammar InternalBlocks;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package m.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package m.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import m.services.BlocksGrammarAccess;

}
@parser::members {
	private BlocksGrammarAccess grammarAccess;

	public void setGrammarAccess(BlocksGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleFile
entryRuleFile
:
{ before(grammarAccess.getFileRule()); }
	 ruleFile
{ after(grammarAccess.getFileRule()); } 
	 EOF 
;

// Rule File
ruleFile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFileAccess().getElementsAssignment()); }
		(rule__File__ElementsAssignment)
		{ after(grammarAccess.getFileAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getGroup()); }
		(rule__Element__Group__0)
		{ after(grammarAccess.getElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleText
entryRuleText
:
{ before(grammarAccess.getTextRule()); }
	 ruleText
{ after(grammarAccess.getTextRule()); } 
	 EOF 
;

// Rule Text
ruleText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getTextAccess().getAlternatives()); }
			(rule__Text__Alternatives)
			{ after(grammarAccess.getTextAccess().getAlternatives()); }
		)
		(
			{ before(grammarAccess.getTextAccess().getAlternatives()); }
			(rule__Text__Alternatives)*
			{ after(grammarAccess.getTextAccess().getAlternatives()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getSolidusGreaterThanSignKeyword_3_0()); }
		'/>'
		{ after(grammarAccess.getElementAccess().getSolidusGreaterThanSignKeyword_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getGroup_3_1()); }
		(rule__Element__Group_3_1__0)
		{ after(grammarAccess.getElementAccess().getGroup_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		(
			{ before(grammarAccess.getElementAccess().getElementsAssignment_3_1_1_0()); }
			(rule__Element__ElementsAssignment_3_1_1_0)
			{ after(grammarAccess.getElementAccess().getElementsAssignment_3_1_1_0()); }
		)
		(
			{ before(grammarAccess.getElementAccess().getElementsAssignment_3_1_1_0()); }
			(rule__Element__ElementsAssignment_3_1_1_0)*
			{ after(grammarAccess.getElementAccess().getElementsAssignment_3_1_1_0()); }
		)
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getTextAssignment_3_1_1_1()); }
		(rule__Element__TextAssignment_3_1_1_1)
		{ after(grammarAccess.getElementAccess().getTextAssignment_3_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getNTerminalRuleCall_0()); }
		RULE_N
		{ after(grammarAccess.getTextAccess().getNTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTextAccess().getWHITE_SPACETerminalRuleCall_1()); }
		RULE_WHITE_SPACE
		{ after(grammarAccess.getTextAccess().getWHITE_SPACETerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTextAccess().getIDTerminalRuleCall_2()); }
		RULE_ID
		{ after(grammarAccess.getTextAccess().getIDTerminalRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__0__Impl
	rule__Element__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getLessThanSignKeyword_0()); }
	'<'
	{ after(grammarAccess.getElementAccess().getLessThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__1__Impl
	rule__Element__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getOpenAssignment_1()); }
	(rule__Element__OpenAssignment_1)
	{ after(grammarAccess.getElementAccess().getOpenAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__2__Impl
	rule__Element__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getAttributesAssignment_2()); }
	(rule__Element__AttributesAssignment_2)*
	{ after(grammarAccess.getElementAccess().getAttributesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getAlternatives_3()); }
	(rule__Element__Alternatives_3)
	{ after(grammarAccess.getElementAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_3_1__0__Impl
	rule__Element__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getGreaterThanSignKeyword_3_1_0()); }
	'>'
	{ after(grammarAccess.getElementAccess().getGreaterThanSignKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_3_1__1__Impl
	rule__Element__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getAlternatives_3_1_1()); }
	(rule__Element__Alternatives_3_1_1)?
	{ after(grammarAccess.getElementAccess().getAlternatives_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_3_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_3_1__2__Impl
	rule__Element__Group_3_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_3_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getLessThanSignSolidusKeyword_3_1_2()); }
	'</'
	{ after(grammarAccess.getElementAccess().getLessThanSignSolidusKeyword_3_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_3_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_3_1__3__Impl
	rule__Element__Group_3_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_3_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getCloseAssignment_3_1_3()); }
	(rule__Element__CloseAssignment_3_1_3)
	{ after(grammarAccess.getElementAccess().getCloseAssignment_3_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_3_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_3_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_3_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getGreaterThanSignKeyword_3_1_4()); }
	'>'
	{ after(grammarAccess.getElementAccess().getGreaterThanSignKeyword_3_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
	(rule__Attribute__NameAssignment_0)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAttributeAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getValueAssignment_2()); }
	(rule__Attribute__ValueAssignment_2)
	{ after(grammarAccess.getAttributeAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__File__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFileAccess().getElementsElementParserRuleCall_0()); }
		ruleElement
		{ after(grammarAccess.getFileAccess().getElementsElementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__OpenAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getOpenIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getElementAccess().getOpenIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__AttributesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getAttributesAttributeParserRuleCall_2_0()); }
		ruleAttribute
		{ after(grammarAccess.getElementAccess().getAttributesAttributeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__ElementsAssignment_3_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getElementsElementParserRuleCall_3_1_1_0_0()); }
		ruleElement
		{ after(grammarAccess.getElementAccess().getElementsElementParserRuleCall_3_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__TextAssignment_3_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getTextTextParserRuleCall_3_1_1_1_0()); }
		ruleText
		{ after(grammarAccess.getElementAccess().getTextTextParserRuleCall_3_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__CloseAssignment_3_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getCloseIDTerminalRuleCall_3_1_3_0()); }
		RULE_ID
		{ after(grammarAccess.getElementAccess().getCloseIDTerminalRuleCall_3_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getValueSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getAttributeAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_N : '-'? ('0'..'9')+ ('.' ('0'..'9')*)?;

RULE_ID : ('_'|'a'..'z'|'A'..'Z') ('_'|'a'..'z'|'A'..'Z'|'0'..'9'|'.'|'-')*;

RULE_WHITE_SPACE : (' '|'\t'|'\r'|'\n');

RULE_STRING : ('"' ( options {greedy=false;} : . )*'"'|'\'' ( options {greedy=false;} : . )*'\'');
