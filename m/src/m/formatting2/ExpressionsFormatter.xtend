/*
 * generated by Xtext
 */
package m.formatting2

import com.google.inject.Inject
import m.expressions.LogicalOr
import m.expressions.Ternary
import m.services.ExpressionsGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class ExpressionsFormatter extends AbstractFormatter2 {
	
	@Inject extension ExpressionsGrammarAccess

	def dispatch void format(Ternary ternary, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		ternary.yes.format
		ternary.no.format
		ternary.check.format
	}

	def dispatch void format(LogicalOr logicalOr, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		logicalOr.right.format
		logicalOr.left.format
	}
	
	// TODO: implement for LogicalAnd, BitwiseOr, BitwiseXor, BitwiseAnd, Equal, NotEqual, GreaterOrEqual, Greater, LowerOrEqual, Lower, RightShift, LeftShift, Subtraction, Addition, Modulo, Division, Multiplication, BitwiseNot, LogicalNot, UnaryMinus
}
