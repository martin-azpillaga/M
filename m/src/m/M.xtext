grammar m.M with m.ModularExpressions

import "http://www.minim.games/modularExpressions"
import "http://www.eclipse.org/emf/2002/Ecore"
generate m "http://www.minim.games/M"

Module:
	entities+=Entity*
;

Entity:
	name=NAME (WS* ':' WS* base=NAME)?
	WS* BEGIN (components+=Component (',' components+=Component)*)? WS* END;

Component:
	WS* name=IDENTIFIER (WS+ value=(Vector|Asset))?;
	
Vector:
	values+=DIGIT (WS+ values+=DIGIT)*
;

Asset:
	value=NAME
;
NAME: LETTER (LETTER|DIGIT|WS+ LETTER|WS+ DIGIT)*
	| DIGIT (DIGIT|WS+ DIGIT)* LETTER (LETTER|DIGIT|WS+ LETTER|WS+ DIGIT)*
;
/*
P:
	name=IDENTIFIER arguments+=IDENTIFIER+
	BEGIN statements+=(Statement|Loop) END
;

Loop:
	entity=IDENTIFIER (':' constraints+=IDENTIFIER+)?
	BEGIN statements+=Statement* END;


terminal DIGIT: '0'..'9';

NUMBER:
	'-'? (DIGIT)* ('.' (DIGIT)+ ('e' '-'? DIGIT+)?)?;*/