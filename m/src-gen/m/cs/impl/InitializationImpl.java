/**
 * generated by Xtext
 */
package m.cs.impl;

import java.util.Collection;

import m.cs.CsPackage;
import m.cs.Initialization;
import m.cs.InitializeVariable;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Initialization</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link m.cs.impl.InitializationImpl#getInitializations <em>Initializations</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InitializationImpl extends PortionImpl implements Initialization
{
  /**
   * The cached value of the '{@link #getInitializations() <em>Initializations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInitializations()
   * @generated
   * @ordered
   */
  protected EList<InitializeVariable> initializations;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InitializationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CsPackage.Literals.INITIALIZATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<InitializeVariable> getInitializations()
  {
    if (initializations == null)
    {
      initializations = new EObjectContainmentEList<InitializeVariable>(InitializeVariable.class, this, CsPackage.INITIALIZATION__INITIALIZATIONS);
    }
    return initializations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CsPackage.INITIALIZATION__INITIALIZATIONS:
        return ((InternalEList<?>)getInitializations()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CsPackage.INITIALIZATION__INITIALIZATIONS:
        return getInitializations();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CsPackage.INITIALIZATION__INITIALIZATIONS:
        getInitializations().clear();
        getInitializations().addAll((Collection<? extends InitializeVariable>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CsPackage.INITIALIZATION__INITIALIZATIONS:
        getInitializations().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CsPackage.INITIALIZATION__INITIALIZATIONS:
        return initializations != null && !initializations.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //InitializationImpl
