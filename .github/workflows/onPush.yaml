on: [push, repository_dispatch]
defaults:
  run:
    shell: bash
jobs:
  lint:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout repository files
        uses: actions/checkout@v2
      - name: Markdown
        run: npx markdownlint-cli -i LICENSE.md "**/*.md"
        continue-on-error: true
      - name: Yaml
        run: |
          sudo apt install yamllint
          yamllint .
        continue-on-error: true
      - name: Create build.gradle
        run: >
          cat >build.gradle <<EOL

          plugins { id "org.xtext.xtend" version "2.0.8" }

          repositories { mavenCentral() }

          dependencies {

              compile 'org.eclipse.xtend:org.eclipse.xtend.lib:2.21.0'

              compile 'org.eclipse.emf:org.eclipse.emf.ecore:2.12.0'

              compile 'org.eclipse.emf:org.eclipse.emf.common:2.18.0'

          }

          sourceSets { main.java.srcDirs = ['Code/m/src/m/build'] }

          task execute (type: Exec) {

              dependsOn generateXtext

              commandLine "java", "-cp", project.configurations.compile.getAsPath(), "build/xtend/main/m/build/Main.java", "Code/m"

          }

          task blockify (type: Exec) {

              dependsOn execute

              commandLine "java", "-cp", project.configurations.compile.getAsPath()+":Code/build/classes/java/main", "m.extra.Blockify", "Code/m"

          }
          
          EOL
      - name: Run gradle
        run: |
          gradle execute
          gradle blockify
      - name: Remove gradle file for sonar
        run: rm build.gradle
      - name: Create sonar configuration
        run: >
          cat >sonar-project.properties <<EOL

          sonar.organization=martin-azpillaga

          sonar.projectKey=martin-azpillaga_M

          sonar.sources=Code/m/src/m
          
          sonar.java.binaries=Code/build/classes/java/main
          
          EOL
      - name: Sonarcloud after xtend
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Install node 10
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      languageServer: m.jar
      application: m.appImage
    steps:
      - name: Install java 11
        run: |
          sudo apt install openjdk-11-jdk
          sudo update-java-alternatives --set java-1.11.0-openjdk-amd64
      - name: Download repository
        uses: actions/checkout@v2
      - name: Install pandoc
        run: |
          sudo apt remove pandoc
          wget https://github.com/jgm/pandoc/releases/download/2.9.1/pandoc-2.9.1-1-amd64.deb
          sudo dpkg -i pandoc-2.9.1-1-amd64.deb
      - name: Create build.gradle
        run: >
          cat >build.gradle <<EOL

          plugins { id "org.xtext.xtend" version "2.0.8" }

          repositories { mavenCentral() }

          dependencies {

              compile 'org.eclipse.xtend:org.eclipse.xtend.lib:2.21.0'

              compile 'org.eclipse.emf:org.eclipse.emf.ecore:2.12.0'

              compile 'org.eclipse.emf:org.eclipse.emf.common:2.18.0'

          }

          sourceSets { main.java.srcDirs = ['Code/m/src/m/build'] }

          task execute (type: Exec) {

              dependsOn generateXtext

              commandLine "java", "-cp", project.configurations.compile.getAsPath(), "build/xtend/main/m/build/Main.java", "Code/m"

          }

          task blockify (type: Exec) {

              dependsOn execute

              commandLine "java", "-cp", project.configurations.compile.getAsPath()+":Code/build/classes/java/main", "m.extra.Blockify", "Code/m"

          }
          
          EOL
      - name: Run gradle
        run: |
          gradle execute
          gradle blockify
      - name: Pandoc create documentation index
        run: |
          mkdir Code/Theia/Documentation
          pandoc README.md -o Code/Theia/Documentation/index.html
      - name: Install yarn with node 10
        run: npm install -g yarn
      - name: Build theia
        working-directory: Code/Theia
        run: yarn update
