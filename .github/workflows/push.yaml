on: push
jobs:
  allinone:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Download repository
        uses: actions/checkout@v2
      - name: Lint Markdown
        run: npx markdownlint-cli -i LICENSE.md "**/*.md"
      - name: Lint Yaml
        run: |
          sudo apt install yamllint
          yamllint -d relaxed .
      - name: Build Java
        run: |
          sudo apt install openjdk-11-jdk
          sudo update-java-alternatives --set java-1.11.0-openjdk-amd64
          cat >build.gradle <<EOL
          plugins { id "org.xtext.xtend" version "2.0.8" }
          repositories { mavenCentral() }
          dependencies {
              compile 'org.eclipse.xtend:org.eclipse.xtend.lib:2.21.0'
              compile 'org.eclipse.emf:org.eclipse.emf.ecore:2.12.0'
              compile 'org.eclipse.emf:org.eclipse.emf.common:2.18.0'
          }
          sourceSets { main.java.srcDirs = ['Code/m/src/m/build'] }
          task execute (type: Exec) {
              dependsOn generateXtext
              commandLine "java", "-cp",
              project.configurations.compile.getAsPath(),
              "build/xtend/main/m/build/Main.java",
              "Code/m"
          }
          task blockify (type: Exec) {
              dependsOn execute
              commandLine "java", "-cp",
              project.configurations.compile.getAsPath()+
              ":Code/build/classes/java/main",
              "m.extra.Blockify",
              "Code/m"
          }
          EOL
          gradle execute
          gradle blockify
      - name: Lint Java
        run: |
          rm build.gradle
          cat >sonar-project.properties <<EOL
          sonar.organization=martin-azpillaga
          sonar.projectKey=martin-azpillaga_M
          sonar.sources=Code/xtend-gen/m
          sonar.java.binaries=Code/build/classes/java/main
          EOL
      - name: Trigger sonarcloud inspection
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Build Markdown
        run: |
          sudo apt remove pandoc
          wget https://github.com/jgm/pandoc/releases/download/2.9.1/pandoc-2.9.1-1-amd64.deb
          sudo dpkg -i pandoc-2.9.1-1-amd64.deb
          mkdir Code/Theia/Documentation
          find . -name "*.md" | xargs -I {} sh -c 'cat "{}" | mkdir -p "Code/Theia/$(dirname "{}")" && pandoc -o "Code/Theia/$(dirname "{}")/$(basename "{}" .md).html"'
          find . -name "*.md" | xargs -I {} sh -c 'cat "{}" | mkdir -p "Code/Theia/$(dirname "{}")" && pandoc --template Code/Theia/template.html -o "Code/Theia/$(dirname "{}")/$(basename "{}" .md).html"'
          pandoc --template Code/Theia/template.html -o Code/Theia/Documentation/README.html README.md
      - name: Install node 10
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - name: Build theia for browser
        working-directory: Code/Theia
        run: |
          npm install -g yarn
          yarn
          yarn update-m-extension
          yarn buildBrowser
      - name: Run tests
        working-directory: Code/Theia
        run: |
          yarn startBrowser &
          Xvfb :3 &
          sleep 5 && xvfb-run node test.js
      - name: Build theia for electron
        if: ${{ github.ref == 'refs/heads/master' }}
        working-directory: Code/Theia
        run: |
          yarn buildElectron
      - name: Package application
        if: ${{ github.ref == 'refs/heads/master' }}
        working-directory: Code/Theia
        run: |
          npm install -g electron-builder
          electron-builder .
      - name: Create Release
        if: ${{ github.ref == 'refs/heads/master' }}
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: Tag ${{ github.ref }}
          release_name: Prerelease ${{ github.ref }}
          draft: true
          prerelease: true
      - name: Upload application to release
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Code/Theia/dist/m-0.0.0.AppImage
          asset_name: m.AppImage
          asset_content_type: text/text
