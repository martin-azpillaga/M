name: Release

on: pull_request

jobs:
  release:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout repository files
      uses: actions/checkout@v1

    - uses: actions/setup-node@v1
      with:
        node-version: '10.x'

    - name: Install yarn with node 10
      run: npm install -g yarn

    - name: Install google translate cli
      run: sudo npm install -g google-translate-cli

    - name: Download java 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Install vsce for packaging vscode extension
      run: sudo npm install -g vsce

    - name: Install pandoc
      run: |
        sudo apt remove pandoc
        wget https://github.com/jgm/pandoc/releases/download/2.9.1/pandoc-2.9.1-1-amd64.deb
        sudo dpkg -i pandoc-2.9.1-1-amd64.deb

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: Tag ${{ github.ref }}
        release_name: Prerelease ${{ github.ref }}
        draft: true
        prerelease: true

    - name: Create theia application (package.json)
      run: |
        cd .github/workflows/configuration
        yarn
        yarn buildStandalone

    - name: Upload standalone application to release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./.github/workflows/configuration/dist/m-textual-0.0.0.AppImage
        asset_name: m-standalone.AppImage
        asset_content_type: text/text

    - name: Translate all markdown files to html
      run: find . -name "*.md" ! -path "./.github/*" | xargs -I {} sh -c 'cat "{}" | pandoc --lua-filter=.github/workflows/configuration/links.lua -o "$(dirname "{}")/$(basename "{}" .md).html"' & exit 0
    - name: Translate all markdown files to spanish
      run: find . -name "*.md" ! -path "./.github/*" | xargs -I {} sh -c 'cat "{}" | translate | pandoc --lua-filter=.github/workflows/configuration/links-es.lua -o "$(dirname "{}")/$(basename "{}" .md)-es.html"' & exit 0
    - name: Translate all markdown files to chinese
      run: find . -name "*.md" ! -path "./.github/*" | xargs -I {} sh -c 'cat "{}" | translate -t zh-CN | pandoc --lua-filter=.github/workflows/configuration/links-zh.lua -o "$(dirname "{}")/$(basename "{}" .md)-zh.html"' & exit 0

    - name: Zip all html files
      run: zip -r m-web.zip Documentation README.html

    - name: Upload all documentation html pages as zip to release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./m-web.zip
        asset_name: m-web.zip
        asset_content_type: text/zip


    - name: Create language server
      run: |
        cd Code/Language\ Server
        gradle runWire
        gradle generateLanguageServer
  
    - name: Upload language server jar to release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Code/Language\ Server/build/libs/m-language-server.jar
        asset_name: m-language-server.jar
        asset_content_type: text/zip

    - name: Run vsce package to create vsix file
      run: |
        cd .github/workflows/configuration/code
        vsce package

    - name: Upload visual studio code extension to release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./.github/workflows/configuration/code/y-0.0.1.vsix
        asset_name: m-extension.vsix
        asset_content_type: text/zip
