name: Release

on: pull_request

jobs:
  release:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout repository files
      uses: actions/checkout@v1

    - uses: actions/setup-node@v1
      with:
        node-version: '10.x'

    - name: Install yarn with node 10
      run: npm install -g yarn

    - name: Install electron-builder
      run: |
        cd Code/Application
        yarn add electron-builder --dev

    - name: Download java 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Install pandoc
      run: |
        sudo apt remove pandoc
        wget https://github.com/jgm/pandoc/releases/download/2.9.1/pandoc-2.9.1-1-amd64.deb
        sudo dpkg -i pandoc-2.9.1-1-amd64.deb

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: Tag ${{ github.ref }}
        release_name: Prerelease ${{ github.ref }}
        draft: true
        prerelease: true

    - name: Pandoc markdown files to html
      run: |
        find Documentation -name "*.md" | xargs -I {} sh -c 'cat "{}" | pandoc --lua-filter=.github/workflows/configuration/links.lua -o "$(dirname "{}")/$(basename "{}" .md).html"'
        pandoc --lua-filter=.github/workflows/configuration/links.lua README.md -o README.html

    - name: Create language server
      run: |
        cd Code
        cp ../.github/workflows/configuration/build.gradle build.gradle
        gradle runWire
        gradle generateLanguageServer
        mv build/libs/m-language-server.jar Application/Theia/ls.jar

    - name: Build application
      run: |
        cd Code/Application
        yarn standalone

    - name: Upload application to release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Code/Application/dist/m-0.0.0.AppImage
        asset_name: m.AppImage
        asset_content_type: text/text
