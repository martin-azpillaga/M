on:
  push:
    branches: [master]
  repository_dispatch:
defaults:
  run:
    shell: bash
jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      languageServer: m.jar
      application: m.appImage
    steps:
      - name: Install java 11
        run: |
          sudo apt install openjdk-11-jdk
          sudo update-java-alternatives --set java-1.11.0-openjdk-amd64
      - name: Download repository
        uses: actions/checkout@v2
      - name: Create build.gradle
        run: >
          cat >build.gradle <<EOL

          plugins { id "org.xtext.xtend" version "2.0.8" }

          repositories { mavenCentral() }

          dependencies {

              compile 'org.eclipse.xtend:org.eclipse.xtend.lib:2.21.0'

              compile 'org.eclipse.emf:org.eclipse.emf.ecore:2.12.0'

              compile 'org.eclipse.emf:org.eclipse.emf.common:2.18.0'

          }

          sourceSets { main.java.srcDirs = ['Code/m/src/m/build'] }

          task execute (type: Exec) {

              dependsOn generateXtext

              commandLine "java", "-cp", project.configurations.compile.getAsPath(), "build/xtend/main/m/build/Main.java", "Code/m"

          }

          task blockify (type: Exec) {

              dependsOn execute

              commandLine "java", "-cp", project.configurations.compile.getAsPath()+":Code/build/classes/java/main", "m.extra.Blockify", "Code/m"

          }
          
          EOL
      - name: Run gradle
        run: |
          gradle execute
          gradle blockify
      - name: Install node 10
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - name: Install yarn with node 10
        run: npm install -g yarn
      - name: Build theia
        working-directory: Code/Theia
        run: yarn update
      - name: Install electron-builder globally
        run: npm install -g electron-builder
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: Tag ${{ github.ref }}
          release_name: Prerelease ${{ github.ref }}
          draft: true
          prerelease: true
      - name: Package the application
        working-directory: Code/Theia
        run: electron-builder .
      - name: Upload application to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Code/Theia/dist/m-0.0.0.AppImage
          asset_name: m.AppImage
          asset_content_type: text/text
