on:
  [push]

name: Delivery

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository files
      uses: actions/checkout@v1
      with:
        ref: master
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: Tag ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: true
    - name: Create m.pdf
      run: npx pandoc README.md -o m.pdf
    - name: Upload m.pdf
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./m.pdf
        asset_name: m.pdf
        asset_content_type: text/pdf
    - name: Create index.html
      run: npx pandoc README.md -o index.html
    - name: Create index.js
      run: |
        echo const { app, BrowserWindow } = require('electron') >> index.js
        echo app.on('ready', () => new BrowserWindow().loadFile('index.html'))" >> index.js
    - name: Create package.json with defaults
      run: npm init --yes
    - name: Run electron builder
      run: npx electron-builder -c.electronVersion 5.0.7 --linux AppImage
    - name: Upload AppImage to release
      id: upload-appImage
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/M-1.0.0.AppImage
        asset_name: m.AppImage
        asset_content_type: text/text