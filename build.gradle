buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'org.xtext:xtext-gradle-plugin:2.0.4'
	}
}

plugins {
	id 'com.github.johnrengelman.shadow' version '4.0.1'
}

repositories {
	mavenCentral()
}


apply plugin: 'org.xtext.xtend'
apply plugin:'java'
apply plugin: 'eclipse'

ext.xtextVersion = '2.19.0'
ext.base = 'm'
ext.grammars = ['Expressions','Modular','M','Text','Testua','CSharp','XML','JSON','YAML']

sourceSets {
	main.java.srcDirs = ["m/src", "m/src-gen"]
	main.resources.srcDirs = ["m/src", "m/src-gen"]
	main.xtendOutputDir = 'm/xtend-gen'
}

configurations {
	mwe2 {
		extendsFrom implementation
	}
}

dependencies {
	implementation platform("org.eclipse.xtext:xtext-dev-bom:${xtextVersion}")
	implementation "org.eclipse.xtext:org.eclipse.xtext:${xtextVersion}"
	mwe2 'org.eclipse.emf:org.eclipse.emf.mwe2.launch'
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.common.types:${xtextVersion}"
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.xtext.generator:${xtextVersion}"
	mwe2 'org.eclipse.xtext:xtext-antlr-generator'
	mwe2 files("${projectDir}/m/src/")
}




task generateProjectFolders{
    outputs.dir "${base}.ide"
    outputs.dir "${base}.ui"
    doLast { file("${base}.ide").mkdirs(); file("${base}.ui").mkdirs() }
}

task generateXtextLanguage(type: JavaExec, dependsOn: generateProjectFolders) {
	
	main = 'org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher'
	classpath = configurations.mwe2 
	args += "m/src/m/Workflow.mwe2"
	args += "-p"
	args += "rootPath=/${projectDir}"

	inputs.files grammars.collect {"m/src/m/"+it+".xtext"}
	inputs.file "m/src/m/Workflow.mwe2"
	
	outputs.dir "m/src-gen"
    outputs.dir "m/model"
    outputs.dir "m/META-INF"
	outputs.dir 'm/src/m/formatting2'
	outputs.dir 'm/src/m/generator'
	outputs.dir 'm/src/m/parser'
	outputs.dir 'm/src/m/validation'
	outputs.file 'm/plugin.xml'
	outputs.file 'm/plugin.xml_gen'
    outputs.files grammars.collect {'m/src/m/'+it+'RuntimeModule.xtend'}
    outputs.files grammars.collect {'m/src/m/'+it+'StandaloneSetup.xtend'}
	
}
cleanGenerateXtextLanguage.dependsOn(cleanGenerateProjectFolders)
clean.dependsOn(cleanGenerateXtextLanguage)

generateXtext.dependsOn(generateXtextLanguage)
clean.dependsOn(cleanGenerateXtext)