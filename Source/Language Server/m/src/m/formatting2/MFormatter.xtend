/*
 * generated by Xtext 2.18.0
 */
package m.formatting2

import com.google.inject.Inject
import m.m.Game
import m.services.MGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class MFormatter extends AbstractFormatter2 {
	
	@Inject extension MGrammarAccess

	def dispatch void format(Game game, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (entity : game.entities) {
			entity.format
		}
		for (control : game.systems) {
			control.format
		}
		for (function : game.functions) {
			function.format
		}
		for (subrutine : game.subrutines) {
			subrutine.format
		}
	}

	def dispatch void format(m.m.System system, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (command : system.commands) {
			command.format
		}
	}
	
	// TODO: implement for Initialization, Loop, Check, While, Condition, ComponentAssignment, VariableAssignment, CreatedAssignment, SubrutineCall, Call, Function, Subrutine, Entity, Real1, Real2, Real3, Real4, Timer, Or, And, BooleanBrackets, Not, Comparison, Exponentiation, Bitwise, ArithmeticBrackets, Plus, Minus, Times, Divide, Modulus, Increment, Decrement
}
