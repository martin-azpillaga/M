/*
 * generated by Xtext
 */
package m.formatting2


import com.google.inject.Inject
import m.services.BlocksGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import m.m.Game
import m.m.Entity

class BlocksFormatter extends AbstractFormatter2 {
	
	@Inject extension BlocksGrammarAccess

	def dispatch void format(Game game, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (entity : game.entities) {
			entity.format
		}
		for (control : game.systems) {
			control.format
		}
	}

	def dispatch void format(Entity entity, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (value : entity.values) {
			value.format
		}
		for (_entity : entity.children) {
			_entity.format
		}
	}
	
	// TODO: implement for Real1, Real2, Real3, Real4, Timer, System, SubrutineCall, ComponentAssignment, VariableAssignment, CreatedAssignment, Initialization, Loop, While, Check, Condition, Or, And, Not, Comparison, Plus, Minus, Times, Divide, Modulus, Bitwise, Increment, Decrement, Call
}
