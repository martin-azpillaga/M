grammar m.M with m.Modular
import "azpillaga.world/modular"
generate m "azpillaga.world/m"

Modul:
	(entities+=Entity|systems+=System|procedures+=Procedure)*
	end = End;

Entity:
	 name = WORD 
	(':' base=WORD	)?
	 '{' components+=Component (',' components+=Component)* '}';

Component:
	name=WORD|
	{VectorComponent} name=WORD entries+=NUMBER+|
	{AssetComponent} name=WORD value=WORD;


System:
	name=WORD
	'{'	statements+=Statement+ '}';

@Override
Statement:
	Loop|Selection|Iteration|FunctionCall|Assignment;

Loop returns Block: {Loop}
	 '∀' entity=WORD
	('∈' collection=ComponentAccess )?
	('|' tags+=WORD+)?
	 '{' statements+=Statement* '}';


@Override
Atomic returns Expression:
	Variable|ComponentAccess|FunctionCall;
	
Variable returns Expression: {Variable}
	name=WORD;

ComponentAccess returns Expression: {ComponentAccess}
	name=WORD
	'.' component=WORD;

@Override
Access returns Expression:
	Variable|ComponentAccess;

End: {End} 'end'?;