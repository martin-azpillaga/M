grammar m.M with m.Modular

import "azpillaga.world/modular"
generate m "azpillaga.world/m"

Modul:
	(entities+=Entity|systems+=System)*;

Entity:
	 name = WORD 
	(
		':'
		base=WORD
	)?
	'{'
	components+=Component (',' components+=Component)*
	'}';

Component:
	name=WORD
	value=(Vector|Asset)?;

Vector:
	entries+=NUMBER+;

Asset:
	name=WORD;

System returns Procedure:
	name=WORD
	'{'
	statements+=Statement+
	('←' returnValue=Expression)?
	'}';

@Override
Statement:
	Selection | Iteration | FunctionCall | Assignment | Loop;

Loop:
	'∀' entity=WORD 
	('∈' tags+=WORD*)?
	'{' statements+=Statement* '}';

ACCESS:
	WORD ('.' WORD)*;

@Override
IdentifierLiteral:
	value=ACCESS;

@Override
Assignment:
	variable=ACCESS
	kind=AssignmentKind
	expression=Expression;

@Override
Primary returns Expression:
	Variable | '(' Expression ')';