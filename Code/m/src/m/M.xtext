grammar m.M with m.Modular
import "azpillaga.world/modular"
generate m "azpillaga.world/m"

Game:
	(archetypes+=Archetype|systems+=System|procedures+=Procedure)
	(archetypes+=Archetype|systems+=System|procedures+=Procedure)*
	end = End;

Archetype:
	 name = WORD 
	(':' base=WORD	)?
	 '{' components+=Component (',' components+=Component)* '}';

Component:
	name=WORD|
	{VectorComponent} name=WORD entries+=NUMBER+|
	{AssetComponent} name=WORD value=WORD;


System:
	name=WORD ':'
	statements+=Statement+;

@Override
Statement:
	Forall|Exists|Selection|Iteration|Action;

Forall returns Block: {Forall}
	 '∀' variable=WORD
	('∈' collection=Expression )?
	('|' tags+=WORD+)?
	 '{' statements+=Statement* '}';

Exists returns Block: {Exists}
	(negated?='∄'|'∃')
	 amount=Amount?
	 variable=WORD
	('∈' collection=Expression )?
	('|' condition=Expression)?
	 '{' statements+=Statement* '}';

Amount:
	kind=AmountKind
	bound=Expression;

End: {End} 'end'?;
enum AmountKind: lower='<'|lowerOrEqual='<='|equal='='|notEqual='!='|greaterOrEqual='>='|greater='>';