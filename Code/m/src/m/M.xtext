grammar m.M with m.Modular
import "azpillaga.world/modular"
generate m "azpillaga.world/m"

Game:
	(archetypes+=Archetype|systems+=System)*
	end=End;

Archetype:
	 name = WORD 
	(':' base=WORD)?
	 '{' components+=Component (',' components+=Component)* '}';

Component:
	name=WORD|
	{VectorComponent} name=WORD entries+=NUMBER+|
	{AssetComponent} name=WORD value=WORD;

System:
	name=WORD ':'
	statements+=Statement+;

@Override
Statement:
	Selection|Iteration|Forall|Exists|Assignment|Function;

Forall returns Block: {Forall}
	 '∀' variable=WORD
	('∈' collection=Expression )?
	('|' tags+=WORD+)?
	 '{' statements+=Statement* '}';

Exists returns Block: {Exists}
	(negated?='∄'|'∃')
	 amount=Amount?
	 variable=WORD
	('∈' collection=Expression )?
	('|' condition=Expression)?
	 '{' statements+=Statement* '}';

Assignment:
	variable=(Variable|ComponentAccess) kind=AssignmentKind expression=Expression
;

ComponentAccess returns Expression: {ComponentAccess}
	entity=WORD '.' component=WORD;

@Override
Primary returns Expression:
	Variable|=>ComponentAccess|=>Function|LogicalNot|Brackets
;

Amount:
	kind=AmountKind
	bound=Expression;

End: {End};

enum AmountKind: lower='<'|lowerOrEqual='<='|equal='='|notEqual='!='|greaterOrEqual='>='|greater='>';