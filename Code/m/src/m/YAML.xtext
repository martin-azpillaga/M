grammar m.YAML with m.JSON hidden(COMMENT)

import "http://www.eclipse.org/emf/2002/Ecore" 
import "azpillaga.world/json"
generate yaml "azpillaga.world/yaml"

Stream:
	(directives+=Directive|documents+=Document)*;

Directive: Version|Tag;
Version:
	'%YAML' SPACE version=DATA WS;
Tag:
	'%TAG' SPACE
	'!'name=DATA'!' SPACE
	value=DATA WS;


Document:
	('---' (SPACE|WS))? 
	root=Node WS
	('...'(SPACE|WS))?;
Node:
	(tag=TagRef (SPACE|WS))?
	('&' anchor=DATA (SPACE|WS))?
	value=Value|
	'*'alias=DATA
;
TagRef:
	LocalTag|GlobalTag|ResolvedTag;

LocalTag:
	'!' handle=DATA '!' value=DATA;
GlobalTag:
	'!!' handle=DATA;
ResolvedTag:
	'!<' handle=DATA '>';

@Override
Value:
	Scalar|Sequence|Mapping;

Scalar:
	value=DATA;
Sequence:
	SequenceFlow;
Mapping:
	MappingFlow;

SequenceFlow: {SequenceFlow}
	'[' (SPACE|WS)* (elements+=Value (SPACE|WS)*(',' (SPACE|WS)* elements+=Value(SPACE|WS)*)*)? ']';

MappingFlow: {MappingFlow}
	'{' (SPACE|WS)*(pairs+=Pair (SPACE|WS)*(',' (SPACE|WS)* pairs+=Pair(SPACE|WS)*)*)? '}';

Pair:
	key=DATA (SPACE|WS)*':' (SPACE|WS)*value=Value;

KeyValue:
	key=DATA ':' SPACE value=Element?;

Map:
	key=DATA ':' WS BEGIN body+=Value (WS body+=Value)* WS? END;

KeyValueList:
	name=DATA ':' WS '-' SPACE values+=(KeyValue | Element) (WS '-' SPACE values+=(KeyValue | Element))*;

Element:
	InlineMap | InlineList | InlineSemicolonList | {Word} value=DATA | {Float} value=NUMBER;

InlineList:
	{InlineList} '[' (elements+=Element (',' SPACE elements+=Element)*)? ']';

InlineMap:
	{InlineMap} '{' (SPACE? values+=KeyValue (',' SPACE values+=KeyValue)* SPACE?)? '}';

InlineSemicolonList:
	{InlineSemicolonList} elements+=DATA ';' elements+=DATA (';' elements+=DATA)*;


@Override
terminal NUMBER returns EFloat: 'number';
terminal fragment LETTER: '\u0061'..'\u007A'|'\u0041'..'\u005A'|'\u00A0'..'\uFFFF';
terminal DATA: ('0'..'9'|LETTER | '_') (':'|','| '.' | '/' | LETTER | '_' | '0'..'9')*;
terminal COMMENT: '#' (LETTER|' ')* NEWLINE;

terminal SPACE:	' ';

@Override 
terminal WS: NEWLINE SPACE*;

terminal NEWLINE: '\r'? '\n';

terminal BEGIN:	'synthetic:BEGIN';
terminal END: 'synthetic:END';