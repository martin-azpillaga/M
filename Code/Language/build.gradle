plugins {
	id 'java'
	id 'application'
	id 'com.github.johnrengelman.shadow' version '5.1.0'
}
repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}
configurations {
	mwe2 {
		extendsFrom implementation
	}
}
dependencies {
	implementation platform('org.eclipse.xtext:xtext-dev-bom:2.22.0')
	implementation 'org.eclipse.xtext:org.eclipse.xtext:2.22.0'
	implementation 'org.eclipse.xtext:org.eclipse.xtext.ide:2.22.0'
	annotationProcessor 'com.github.bsideup.jabel:jabel-javac-plugin:0.2.0'
	mwe2 'org.eclipse.emf:org.eclipse.emf.mwe2.launch'
	mwe2 'org.eclipse.xtext:org.eclipse.xtext.common.types:2.22.0'
	mwe2 'org.eclipse.xtext:org.eclipse.xtext.xtext.generator:2.22.0'
	mwe2 'org.eclipse.xtext:xtext-antlr-generator'
}
sourceSets {
	main {
		java.srcDirs = ['m/src', 'm/src-gen']
		resources.srcDirs = ['m/src', 'm/src-gen']
		resources.exclude '**/*.g', '**/*.mwe2', '**/*.xtend', '**/*._trace'
	}
}
mainClassName = 'm.main.Main'
sourceCompatibility = '11'
compileJava {
	options.compilerArgs = [
		'--release', '8'
	]
}

task generateXtextLanguage(type: JavaExec) {
	main = 'org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher'
	args += 'm/src/m/model/GenerateModelAndParser.mwe2'
	args += '-p'
	args += "rootPath=/${projectDir}"
	classpath = configurations.mwe2
}
compileJava.dependsOn(generateXtextLanguage)

shadowJar {
	from(project.convention.getPlugin(JavaPluginConvention).sourceSets.main.output)
	configurations = [project.configurations.runtimeClasspath]
	exclude('META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'schema/*',
		'.options', '.api_description', '*.profile', '*.html', 'about.*', 'about_files/*',
		'plugin.xml', 'systembundle.properties', 'profile.list')
	append('plugin.properties')
	archiveBaseName = 'M'
	classifier = ''
}
